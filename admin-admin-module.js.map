{"version":3,"sources":["./src/app/admin/editform/editform.component.ts","./src/app/admin/editform/editform.component.html","./src/app/admin/addcake/addcake.component.ts","./src/app/admin/addcake/addcake.component.html","./src/app/admin/admin.module.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-editform',\r\n  templateUrl: './editform.component.html',\r\n  styleUrls: ['./editform.component.css'],\r\n})\r\nexport class EditformComponent implements OnInit {\r\n  // store the cake details data\r\n  cake: any;\r\n  // store the loading status of cake details\r\n  loading: any = true;\r\n  // store the ingredients of the cake\r\n  cakeIngs: any = [];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private cs: CommonService,\r\n    private admin: AdminService,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    // fetch the cake id from the params\r\n    const id = this.route.snapshot.params.cakeId;\r\n\r\n    // hit get request to fetch the cake details\r\n    this.http.get(environment.apiUrl + 'cake/' + id).subscribe(\r\n      (res: any) => {\r\n        if (res.data) {\r\n          // store the cake details\r\n          this.cake = res.data;\r\n          // call the method to update ingredients array\r\n          this.updateIngs();\r\n\r\n          this.loading = false;\r\n          return;\r\n        }\r\n        this.toastr.error(res.message);\r\n      },\r\n      (err) => {\r\n        // display the error message\r\n        console.log(err);\r\n        this.toastr.error(err.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // method to upload image to the server\r\n  upload(e: any) {\r\n    // select the parent form tag\r\n    e = e.target.parentElement.parentElement;\r\n    // select the file input tag\r\n    const file: any = e.querySelector('#image'),\r\n      // select the img tag to preview image\r\n      img: any = document.querySelector('.preview-img img'),\r\n      // create formData object from FromData Class\r\n      formData: any = new FormData();\r\n\r\n    // check if user has uploaded image or not\r\n    if (!file.files[0]) {\r\n      this.toastr.info('Then click on upload');\r\n      this.toastr.info('First Choose the image File!!');\r\n      return;\r\n    }\r\n\r\n    // show uploading message\r\n    this.toastr.info('Image Uploading..... ', '', {\r\n      progressBar: true,\r\n      timeOut: 2000,\r\n      progressAnimation: 'increasing',\r\n    });\r\n\r\n    // append uploaded file to formData\r\n    formData.append('file', file.files[0]);\r\n\r\n    const user = JSON.parse(localStorage.loginUser);\r\n\r\n    // generating http post request to upload image\r\n    this.http.post(environment.apiUrl + 'upload', formData).subscribe(\r\n      (res: any) => {\r\n        // check if image upload successful\r\n        if (res.imageUrl) {\r\n          this.toastr.success('Image Uploaded Successfuly');\r\n\r\n          this.cake.image = res.imageUrl;\r\n        } else {\r\n          this.toastr.info('Please Upload a valid Image File');\r\n          this.toastr.warning('Image Upload failed!!');\r\n        }\r\n      },\r\n      (err) => {\r\n        // display the error message\r\n        console.log(err);\r\n        this.toastr.error('Image Upload failed!!');\r\n      }\r\n    );\r\n  }\r\n  // method to preview image before uploading\r\n  imgPreview(imgEl: any) {\r\n    // select the input file tag\r\n    const file: any = imgEl.target,\r\n      // select img tag to preview image\r\n      imgOutput: any = document.querySelector('.preview-img img');\r\n\r\n    // create the url to preview image\r\n    imgOutput.src = URL.createObjectURL(file.files[0]);\r\n  }\r\n\r\n  // method to save edits\r\n  saveChanges() {\r\n    // check to validate cake details\r\n    if (this.admin.validateCakeDetails(this.cake)) {\r\n      // filter out the vaild ingredients fields\r\n      this.cake.ingredients = this.cake.ingredients.filter((e: any) => e);\r\n      this.updateIngs();\r\n\r\n      console.log(this.cake);\r\n      return;\r\n    }\r\n    this.toastr.info('Please fill all fields correctly.');\r\n  }\r\n\r\n  // method to delete ingredient\r\n  deleteIng(i: any) {\r\n    this.cake.ingredients.splice(i, 1);\r\n    this.updateIngs();\r\n  }\r\n  // method to add ingredients\r\n  addIng(e: any) {\r\n    e.preventDefault();\r\n    this.cake.ingredients.push('');\r\n    this.updateIngs();\r\n  }\r\n\r\n  // method to update the ingredients array\r\n  updateIngs() {\r\n    this.cakeIngs = [];\r\n    this.cakeIngs = this.cake.ingredients.map((e: any) => e);\r\n  }\r\n}\r\n","<div class=\"login-section\">\r\n  <h1>Edit Cake Details</h1>\r\n  <!-- data loading message -->\r\n  <ul class=\"cart-products-list flex\" *ngIf=\"loading\">\r\n    <p>\r\n      <img class=\"loading\" src=\"https://i.stack.imgur.com/hzk6C.gif\" alt=\"\" />\r\n      Cake Details...\r\n    </p>\r\n  </ul>\r\n  <!-- edit form -->\r\n  <form *ngIf=\"!loading && cake\" (submit)=\"saveChanges()\">\r\n    <div class=\"form-group\">\r\n      <label for=\"image\">Product Image :</label>\r\n      <div class=\"preview-img\">\r\n        <img [src]=\"cake.image\" alt=\"\" />\r\n      </div>\r\n      <div class=\"flex\">\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          (change)=\"imgPreview($event)\"\r\n          class=\"form-control\"\r\n          id=\"image\"\r\n        />\r\n\r\n        <button type=\"button\" (click)=\"upload($event)\" class=\"btn btn-primary\">\r\n          Upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Cake Name :</label>\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        placeholder=\"Enter your full name\"\r\n        autocomplete=\"disabled\"\r\n        [(ngModel)]=\"cake.name\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group flex owner-details\">\r\n      <div>\r\n        <label for=\"price\">Price :</label>\r\n        ₹<input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"cake.price\"\r\n          placeholder=\"Enter your cake price\"\r\n          id=\"price\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"weight\">Weight :</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"weight\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"cake.weight\"\r\n          placeholder=\"Enter your cake weight\"\r\n          id=\"weight\"\r\n        />\r\n        Kg\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"description\">Description :</label>\r\n      <input\r\n        name=\"description\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"description\"\r\n        [(ngModel)]=\"cake.description\"\r\n        placeholder=\"Enter your address\"\r\n        autocomplete=\"disabled\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group flex\">\r\n      <div class=\"flex type\">\r\n        <label for=\"type\">Type :</label>\r\n        <input\r\n          name=\"type\"\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"type\"\r\n          [(ngModel)]=\"cake.type\"\r\n          placeholder=\"Enter cake type\"\r\n          autocomplete=\"disabled\"\r\n        />\r\n      </div>\r\n      <div class=\"flex\">\r\n        <label for=\"eggless\">Eggless :</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"eggless\"\r\n          [(ngModel)]=\"cake.eggless\"\r\n          id=\"eggless\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"flavour\">Flavour :</label>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"flavour\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"cake.flavour\"\r\n        placeholder=\"Enter your cake flavour\"\r\n        id=\"flavour\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"ingredients\">Ingredients :</label>\r\n      <div class=\"flex ingredient\">\r\n        <div *ngFor=\"let ingredient of cake.ingredients; index as i\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"{{ ingredient + i }}\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"cakeIngs[i]\"\r\n            (change)=\"cake.ingredients.splice(i, 1, cakeIngs[i])\"\r\n            placeholder=\"Enter your ingredient\"\r\n            [id]=\"'ingredient' + i\"\r\n          />\r\n          <button type=\"button\" class=\"btn\" (click)=\"deleteIng(i)\">\r\n            <i class=\"far fa-trash-alt\"></i>\r\n          </button>\r\n        </div>\r\n        <button type=\"button\" class=\"btn\" (click)=\"addIng($event)\">\r\n          <i class=\"fas fa-plus-square fa-2x\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"owner\">Owner Details :</label>\r\n      <div class=\"form-group flex owner-details\" id=\"owner\">\r\n        <div>\r\n          <label for=\"oemail\">Email :</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"oemail\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"cake.owner.email\"\r\n            placeholder=\"Enter your cake flavour\"\r\n            id=\"oemail\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label for=\"oname\">Name :</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"oname\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"cake.owner.name\"\r\n            placeholder=\"Enter your cake flavour\"\r\n            id=\"oname\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"btn btn-primary\">Save Changes</button>\r\n  </form>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-addcake',\r\n  templateUrl: './addcake.component.html',\r\n  styleUrls: ['./addcake.component.css'],\r\n})\r\nexport class AddcakeComponent implements OnInit {\r\n  // store the cake details\r\n  cake: any = { type: '' };\r\n  // store the cake ingrediants\r\n  ingrediant: any = {};\r\n  ingredients: any = [];\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private http: HttpClient,\r\n    private admin: AdminService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  // method to add cake to the server\r\n  addcake() {\r\n    // check whether image is uploaded\r\n    if (!this.cake.image) {\r\n      this.toastr.warning('Please Upload the cake image first.');\r\n      return;\r\n    }\r\n\r\n    // validate the cake input fields\r\n    if (this.admin.validateCakeDetails(this.cake)) {\r\n      // store the ingrediants\r\n      this.ingredients = Object.values(this.ingrediant);\r\n      // filter out the valid ingrediant valuess\r\n      this.ingredients = [...this.ingredients].filter(\r\n        (e: any) => e || e.trim()\r\n      );\r\n      // store the ingredients array in the cake object\r\n      this.cake.ingredients = [...this.ingredients];\r\n\r\n      // hit post request to get the cake details\r\n      this.http.post(environment.apiUrl + 'addcake', this.cake).subscribe(\r\n        (res: any) => {\r\n          // check if the cake added successful\r\n          if (res.message === 'Success') {\r\n            this.toastr.success(`${this.cake.name} Added Successfully.`);\r\n            this.router.navigate(['/admin']);\r\n            return;\r\n          }\r\n          // display the waring message if any error comes\r\n          this.toastr.warning(res.errorMessage.message, '', {\r\n            positionClass: 'toast-top-full-width',\r\n          });\r\n        },\r\n        (err) => {\r\n          // display this server error\r\n          this.toastr.error(err.message);\r\n          console.log(err);\r\n        }\r\n      );\r\n\r\n      return;\r\n    }\r\n    this.toastr.info('Please fill all fields correctly.');\r\n  }\r\n\r\n  // image upload method\r\n  upload(e: any) {\r\n    // select the parent form tag\r\n    e = e.target.parentElement.parentElement;\r\n    // select the file input tag\r\n    const file: any = e.querySelector('#image'),\r\n      // select the image tag to preview image\r\n      img: any = document.querySelector('.preview-img img'),\r\n      // create formData object from FromData Class\r\n      formData: any = new FormData();\r\n\r\n    // check if user has uploaded image or not\r\n    if (!file.files[0]) {\r\n      this.toastr.info('Then click on upload');\r\n      this.toastr.info('First Choose the image File!!');\r\n      return;\r\n    }\r\n\r\n    // show uploading message\r\n    this.toastr.info('Image Uploading..... ', '', {\r\n      progressBar: true,\r\n      timeOut: 2000,\r\n      progressAnimation: 'increasing',\r\n    });\r\n\r\n    // append uploaded file to formData\r\n    formData.append('file', file.files[0]);\r\n\r\n    // hit post request to uplaod image\r\n    this.http.post(environment.apiUrl + 'upload', formData).subscribe(\r\n      (res: any) => {\r\n        // check if image upload is successful\r\n        if (res.imageUrl) {\r\n          this.toastr.success('Image Uploaded Successfuly');\r\n\r\n          this.cake.image = res.imageUrl;\r\n        } else {\r\n          this.toastr.info('Please Upload a valid Image File');\r\n          this.toastr.warning('Image Upload failed!!');\r\n        }\r\n      },\r\n      (err) => {\r\n        // display the error message\r\n        console.log(err);\r\n        this.toastr.error('Image Upload failed!!');\r\n      }\r\n    );\r\n  }\r\n\r\n  // preview the image before uploading\r\n  imgPreview(imgEl: any) {\r\n    // select the file input tag\r\n    const file: any = imgEl.target,\r\n      // select the image tag to preview the image\r\n      imgOutput: any = document.querySelector('.preview-img img');\r\n    // create the url to preview image\r\n    imgOutput.src = URL.createObjectURL(file.files[0]);\r\n  }\r\n\r\n  // method to delete ingrediant\r\n  deleteIng(i: any) {\r\n    delete this.ingrediant[i];\r\n    this.ingredients = Object.values(this.ingrediant);\r\n  }\r\n  // method to add ingrediant\r\n  addIng(e: any) {\r\n    this.ingredients = Object.values(this.ingrediant);\r\n    this.ingredients.push('');\r\n  }\r\n}\r\n","<div class=\"login-section\">\r\n  <h1>Add Cake Details</h1>\r\n\r\n  <form (submit)=\"addcake()\">\r\n    <div class=\"form-group\">\r\n      <label for=\"image\">Product Image :</label>\r\n      <div class=\"preview-img\">\r\n        <img [src]=\"cake.image\" alt=\"\" />\r\n      </div>\r\n      <div class=\"flex\">\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          (change)=\"imgPreview($event)\"\r\n          class=\"form-control\"\r\n          id=\"image\"\r\n        />\r\n\r\n        <button type=\"button\" (click)=\"upload($event)\" class=\"btn btn-primary\">\r\n          Upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Cake Name :</label>\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        placeholder=\"Enter your full name\"\r\n        autocomplete=\"disabled\"\r\n        [(ngModel)]=\"cake.name\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group flex owner-details\">\r\n      <div>\r\n        <label for=\"price\">Price :</label>\r\n        ₹<input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"cake.price\"\r\n          placeholder=\"Enter your cake price\"\r\n          id=\"price\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"weight\">Weight:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"weight\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"cake.weight\"\r\n          placeholder=\"Enter your cake weight\"\r\n          id=\"weight\"\r\n        />\r\n        Kg\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"description\">Description :</label>\r\n      <input\r\n        name=\"description\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"description\"\r\n        [(ngModel)]=\"cake.description\"\r\n        placeholder=\"Enter your address\"\r\n        autocomplete=\"disabled\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group flex\">\r\n      <div class=\"flex type\">\r\n        <label for=\"type\">Type :</label>\r\n        <select class=\"form-select\" name=\"type\" [(ngModel)]=\"cake.type\">\r\n          <option value=\"\">Select Cake type</option>\r\n          <option value=\"General\">General</option>\r\n          <option value=\"Special\">Special</option>\r\n          <option value=\"Birthday\">Birthday</option>\r\n          <option value=\"Wedding\">Wedding</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"flex\">\r\n        <label for=\"eggless\">Eggless :</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"eggless\"\r\n          [(ngModel)]=\"cake.eggless\"\r\n          id=\"eggless\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"flavour\">Flavour :</label>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"flavour\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"cake.flavour\"\r\n        placeholder=\"Enter your cake flavour\"\r\n        id=\"flavour\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"ingredients\">Ingredients :</label>\r\n      <div class=\"flex ingredient\">\r\n        <div *ngFor=\"let ingredien of ingredients; index as i\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"{{ ingredien + i }}\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"ingrediant[i]\"\r\n            placeholder=\"Enter your ingredient\"\r\n            [id]=\"'ingredien' + i\"\r\n          />\r\n          <button type=\"button\" class=\"btn\" (click)=\"deleteIng(i)\">\r\n            <i class=\"far fa-trash-alt\"></i>\r\n          </button>\r\n        </div>\r\n        <button type=\"button\" class=\"btn\" (click)=\"addIng($event)\">\r\n          <i class=\"fas fa-plus-square fa-2x\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Add Product</button>\r\n  </form>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminComponent } from './admin.component';\r\nimport { EditformComponent } from './editform/editform.component';\r\nimport { AddcakeComponent } from './addcake/addcake.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AdminComponent },\r\n  { path: 'editcake/:cakeId', component: EditformComponent },\r\n  { path: 'addcake', component: AddcakeComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes), FormsModule, CommonModule],\r\n  exports: [RouterModule],\r\n  declarations: [EditformComponent, AddcakeComponent],\r\n})\r\nexport class AdminModule {}\r\n"],"sourceRoot":"webpack:///"}