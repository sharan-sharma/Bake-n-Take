{"version":3,"sources":["./src/app/cake-details/cake-details.component.ts","./src/app/cake-details/cake-details.component.html","./src/app/orders/orders.component.html","./src/app/orders/orders.component.ts","./src/app/resolvers/orders.service.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/services/admin.service.ts","./src/environments/environment.ts","./src/app/guards/canactivate.service.ts","./src/app/test.directive.ts","./src/app/carousel/carousel.component.html","./src/app/carousel/carousel.component.ts","./src/app/checkout/checkout.component.html","./src/app/checkout/checkout.component.ts","./src/app/shop-cakes/shop-cakes.component.html","./src/app/shop-cakes/shop-cakes.component.ts","./src/app/services/common.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.html","./src/app/admin/admin.component.ts","./src/app/pagination-admin/pagination-admin.component.html","./src/app/pagination-admin/pagination-admin.component.ts","./src/app/app.module.ts","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/auth/interceptor.service.ts","./src/app/pagination/pagination.component.html","./src/app/pagination/pagination.component.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/searchresults/searchresults.component.ts","./src/app/searchresults/searchresults.component.html","./src/app/resolvers/cart.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/cakecard/cakecard.component.html","./src/app/cakecard/cakecard.component.ts","./src/app/forgetpass/forgetpass.component.ts","./src/app/forgetpass/forgetpass.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-cake-details',\r\n  templateUrl: './cake-details.component.html',\r\n  styleUrls: ['./cake-details.component.css'],\r\n})\r\nexport class CakeDetailsComponent {\r\n  // object to store the details of the cake\r\n  cake: any = {};\r\n  // to store the status of whether the cake details loaded or not\r\n  dataloaded: any = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private cs: CommonService,\r\n    private http: HttpClient,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) {\r\n    // fetch the cakeid from the url using ActivatedRoute class\r\n    const id = +this.route.snapshot.params.id;\r\n    // hit api to get the cake details\r\n    this.http.get(environment.apiUrl + 'cake/' + id).subscribe(\r\n      (res: any) => {\r\n        // store the cake details object to the cake property\r\n        this.cake = res.data;\r\n        //  set data loading to true\r\n        this.dataloaded = true;\r\n      },\r\n      (err) => {\r\n        // display the error message\r\n        console.log(err);\r\n        this.toastr.error(err.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  // method the add cake to cart\r\n  addToCart() {\r\n    // check whether the user is loging or not\r\n    if (!localStorage.loginUser) {\r\n      this.toastr.warning('Login To use Add To Cart');\r\n      // redirecting user to login page\r\n      setTimeout(() => {\r\n        this.router.navigate(['/login']);\r\n      }, 2000);\r\n    }\r\n    if (localStorage.loginUser) {\r\n      // creating cake object to send in post request\r\n      const cakeObj = {\r\n        cakeid: this.cake.cakeid,\r\n        name: this.cake.name,\r\n        image: this.cake.image,\r\n        weight: this.cake.weight,\r\n        price: this.cake.price,\r\n      };\r\n\r\n      // hit post request to add cake to cart\r\n      this.http.post(environment.apiUrl + 'addcaketocart', cakeObj).subscribe(\r\n        (res: any) => {\r\n          // check whether the cake addded to cart or not\r\n          if (res.data) { this.toastr.success(res.message); }\r\n          else { this.toastr.warning(res.message); }\r\n        },\r\n        (err) => {\r\n          // display the error message\r\n          console.log(err);\r\n          this.toastr.error(err.message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"cake-details-Container\">\r\n  <!-- ul to show the loading message -->\r\n  <ul class=\"cart-products-list flex\" *ngIf=\"!dataloaded\">\r\n    <p>\r\n      <img class=\"loading\" src=\"https://i.stack.imgur.com/hzk6C.gif\" alt=\"\" />\r\n      Cake Details...\r\n    </p>\r\n  </ul>\r\n  <!-- div to show the cake details -->\r\n  <div class=\"cake-data small-screen\" *ngIf=\"dataloaded\">\r\n    <div class=\"cake-description\">\r\n      <h1>{{ cake.name }}</h1>\r\n\r\n      <div class=\"userReview\">\r\n        <div class=\"rate\">\r\n          <span\r\n            class=\"fa fa-star {{ cake.ratings >= 1 ? 'checked' : '' }}\"\r\n          ></span>\r\n          <span\r\n            class=\"fa fa-star {{ cake.ratings >= 2 ? 'checked' : '' }}\"\r\n          ></span>\r\n          <span\r\n            class=\"fa fa-star {{ cake.ratings >= 3 ? 'checked' : '' }}\"\r\n          ></span>\r\n          <span\r\n            class=\"fa fa-star {{ cake.ratings >= 4 ? 'checked' : '' }}\"\r\n          ></span>\r\n          <span\r\n            class=\"fa fa-star {{ cake.ratings >= 5 ? 'checked' : '' }}\"\r\n          ></span>\r\n          <p>{{ cake.ratings }}</p>\r\n        </div>\r\n        <div class=\"noOfReviews\">\r\n          <p>{{ cake.reviews }} Reviews</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"dataloaded\">\r\n    <div class=\"cake-img-ingredient\">\r\n      <div class=\"cake-img\">\r\n        <span *ngIf=\"!cake.eggless\"\r\n          ><img src=\"assets/nonVeg.png\" alt=\"\"\r\n        /></span>\r\n        <span *ngIf=\"cake.eggless\"><img src=\"assets/veg.png\" alt=\"\" /></span>\r\n        <img [src]=\"cake.image\" alt=\"\" />\r\n      </div>\r\n      <div class=\"ingredients\">\r\n        <p class=\"heading\">Ingredients:</p>\r\n        <ul class=\"infredient-list\">\r\n          <li *ngFor=\"let ing of cake.ingredients\">\r\n            <ul>\r\n              <li>{{ ing }}</li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"cake-data\">\r\n      <div class=\"cake-description\">\r\n        <h1 class=\"screen-hide\">{{ cake.name }}</h1>\r\n\r\n        <div class=\"userReview screen-hide\">\r\n          <div class=\"rate\">\r\n            <span\r\n              class=\"fa fa-star {{ cake.ratings >= 1 ? 'checked' : '' }}\"\r\n            ></span>\r\n            <span\r\n              class=\"fa fa-star {{ cake.ratings >= 2 ? 'checked' : '' }}\"\r\n            ></span>\r\n            <span\r\n              class=\"fa fa-star {{ cake.ratings >= 3 ? 'checked' : '' }}\"\r\n            ></span>\r\n            <span\r\n              class=\"fa fa-star {{ cake.ratings >= 4 ? 'checked' : '' }}\"\r\n            ></span>\r\n            <span\r\n              class=\"fa fa-star {{ cake.ratings >= 5 ? 'checked' : '' }}\"\r\n            ></span>\r\n            <p>{{ cake.ratings }}</p>\r\n          </div>\r\n          <div class=\"noOfReviews\">\r\n            <p>{{ cake.reviews }} Reviews</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"cake-description-text\">\r\n          <p>{{ cake.description }}</p>\r\n          <p class=\"price highlight\">\r\n            <span class=\"heading\">Current Price :</span>\r\n            ₹ {{ cake.price }}\r\n          </p>\r\n          <p>{{ cake.buyerAvgReview }}</p>\r\n          <p class=\"weight\">\r\n            <span class=\"heading\">Weight :</span>{{ cake.weight }} Kg\r\n          </p>\r\n          <p class=\"flavour highlight\">\r\n            <span class=\"heading\">Flavour :</span> {{ cake.flavour }}\r\n          </p>\r\n          <p class=\"type\"><span>Occasion :</span> {{ cake.type }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"cake-buttons\">\r\n        <button class=\"btn btn-custom cart\" (click)=\"addToCart()\">\r\n          Add To Cart\r\n        </button>\r\n        <!-- <button class=\"btn btn-custom wishlist\">\r\n          <span class=\"fas fa-heart\"></span>\r\n        </button> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"cart flex\">\r\n  <header class=\"cart-header flex\">\r\n    <h1>My Orders</h1>\r\n  </header>\r\n\r\n  <main class=\"cart-main flex\">\r\n    <div class=\"cart-products flex\">\r\n      <ul class=\"cart-products-list flex\" *ngIf=\"cartItems.length < 1\">\r\n        <p class=\"cart-empty\">\r\n          <img\r\n            class=\"loading\"\r\n            src=\"https://www.pngfind.com/pngs/b/272-2727925_cart-png.png\"\r\n            alt=\"\"\r\n          />\r\n          <span>\r\n            My Order is Empty.\r\n            <a routerLink=\"/\">Click here</a> to Order Cakes</span\r\n          >\r\n        </p>\r\n      </ul>\r\n      <ul class=\"cart-products-list flex\" *ngIf=\"cartItems.length > 0\">\r\n        <li class=\"products-header\">\r\n          <p>Order</p>\r\n          <p class=\"center\">Order Id</p>\r\n          <p class=\"center\">Payment Mode</p>\r\n          <p class=\"center\">Price</p>\r\n        </li>\r\n\r\n        <div class=\"order-details\" *ngFor=\"let item of cartItems\">\r\n          <p class=\"products\">\r\n            <a\r\n              data-bs-toggle=\"collapse\"\r\n              href=\"#m{{ item.orderid }}\"\r\n              role=\"button\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseExample\"\r\n            >\r\n              <li class=\"products\" (click)=\"showOrderDetails(item.orderid)\">\r\n                <p class=\"item-title\">\r\n                  <span\r\n                    ><p>\r\n                      {{ item.name }}\r\n                      <span class=\"small-text\">({{ item.orderdate }})</span>\r\n                    </p>\r\n                    <p class=\"small-text\">\r\n                      Phone No. :\r\n                      {{ item.phone }}\r\n                    </p>\r\n                    <p class=\"small-text\">\r\n                      Mail Id :\r\n                      {{ item.email }}\r\n                    </p>\r\n                    <p class=\"small-text\">\r\n                      Address:\r\n                      {{ item.address + \",\" + item.city + \"-\" + item.pincode }}\r\n                    </p>\r\n                  </span>\r\n                </p>\r\n                <p class=\"center\">{{ item.orderid }}</p>\r\n                <p class=\"center\">{{ item.mode }}</p>\r\n                <p class=\"center\">{{ item.price | currency: \"INR\" }}</p>\r\n              </li>\r\n            </a>\r\n          </p>\r\n          <div class=\"collapse\" id=\"m{{ item.orderid }}\">\r\n            <div class=\"details\">\r\n              <li class=\"products-header\">\r\n                <p>Order Details</p>\r\n                <p>Price</p>\r\n                <p>Qty</p>\r\n                <p>Subtotal</p>\r\n              </li>\r\n              <li class=\"products\" *ngFor=\"let cake of item.cakes\">\r\n                <p class=\"cakename\">\r\n                  <img\r\n                    class=\"click-effect\"\r\n                    [src]=\"cake.image\"\r\n                    alt=\"\"\r\n                    routerLink=\"/cakes/{{ cake.cakeid }}\"\r\n                  />\r\n                  <span\r\n                    class=\"click-effect\"\r\n                    routerLink=\"/cakes/{{ cake.cakeid }}\"\r\n                    >{{ cake.name }}\r\n                    <p class=\"small-text\">\r\n                      Weight:\r\n                      {{ cake.weight }}kg\r\n                    </p>\r\n                  </span>\r\n                </p>\r\n                <p>{{ cake.price | currency: \"INR\" }}</p>\r\n                <p>{{ cake.quantity }}</p>\r\n                <p>{{ cake.price * cake.quantity | currency: \"INR\" }}</p>\r\n              </li>\r\n              <li class=\"products-header\"></li>\r\n              <li class=\"products-header total\">\r\n                <p>\r\n                  <i class=\"fas fa-truck\"></i>\r\n                  {{\r\n                    !item.freeDelivery\r\n                      ? \" Delivery Charge: ₹\" + cs.deliveryCharge\r\n                      : \"Free Delivery\"\r\n                  }}\r\n                </p>\r\n                <p></p>\r\n                <p>Total :</p>\r\n                <p class=\"total\">\r\n                  <span class=\"delivery-charge\">\r\n                    {{ item.subtotal | currency: \"INR\" }}</span\r\n                  >\r\n                  <span class=\"delivery-charge\">\r\n                    +\r\n                    {{\r\n                      !item.freeDelivery\r\n                        ? cs.deliveryCharge\r\n                        : (0 | currency: \"INR\")\r\n                    }}</span\r\n                  >\r\n\r\n                  <span class=\"total-price\">\r\n                    {{ item.price | currency: \"INR\" }}\r\n                  </span>\r\n                </p>\r\n              </li>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <li class=\"products-header\"></li>\r\n      </ul>\r\n    </div>\r\n  </main>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css'],\r\n})\r\nexport class OrdersComponent {\r\n  // store cart item of the order\r\n  cartItems: any = [];\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    public cs: CommonService,\r\n    private http: HttpClient,\r\n    private router: ActivatedRoute\r\n  ) {\r\n    // fetch the orders data from the route\r\n    router.data.subscribe((res: any) => {\r\n      this.cartItems = res[0].cakeorders;\r\n      this.getOrders();\r\n    });\r\n  }\r\n  // methods to show and hide order details\r\n  showOrderDetails(ordid: any) {\r\n    const el = document.getElementById(ordid);\r\n    el?.classList.toggle('hidden');\r\n  }\r\n\r\n  getOrders() {\r\n    this.cartItems.forEach((e: any) => {\r\n      const orddate = new Date(e.orderdate);\r\n      e.orderdate = `${orddate.getDate().toString(10).padStart(2, '0')}/${(\r\n        orddate.getMonth() + 1\r\n      )\r\n        .toString(10)\r\n        .padStart(2, '0')}/${orddate.getFullYear()}`;\r\n      e.timeS = orddate.getTime();\r\n      let totalPrice = 0;\r\n      e.cakes.forEach((e: any) => {\r\n        totalPrice += e.price * e.quantity;\r\n      });\r\n      if (totalPrice >= 500) {\r\n        e.freeDelivery = true;\r\n        e.subtotal = e.price;\r\n      } else {\r\n        e.freeDelivery = false;\r\n        e.subtotal = e.price - this.cs.deliveryCharge;\r\n      }\r\n    });\r\n    this.cartItems.sort((a: any, b: any) => b.timeS - a.timeS);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrdersService implements Resolve<any> {\r\n  constructor(private http: HttpClient) {}\r\n  resolve(): any {\r\n    // get user orders details\r\n    return this.http.post(environment.apiUrl + 'cakeorders', {});\r\n  }\r\n}\r\n","<!-- Added carousel Component here -->\r\n<div><app-carousel></app-carousel></div>\r\n\r\n<!-- Cake list div to render cake list -->\r\n<div class=\"cake-list\">\r\n  <!-- sort dropdown to sort according to price -->\r\n  <div *ngFor=\"let cake of cs.cakeSearch\" class=\"price-filter\">\r\n    <div class=\"dropdown\">\r\n      <a\r\n        class=\"btn btn-secondary dropdown-toggle\"\r\n        href=\"#\"\r\n        role=\"button\"\r\n        id=\"dropdownMenuLink\"\r\n        data-bs-toggle=\"dropdown\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        <i class=\"fas fa-funnel-dollar\"></i>Sort\r\n      </a>\r\n\r\n      <!-- dropdown menu -->\r\n      <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n        <li>\r\n          <a class=\"dropdown-item\" (click)=\"filter('lth')\"\r\n            ><span class=\"fas fa-sort-amount-down-alt\"></span>Low to High</a\r\n          >\r\n        </li>\r\n        <li>\r\n          <a class=\"dropdown-item\" (click)=\"filter('htl')\"\r\n            ><i class=\"fas fa-sort-amount-up-alt\"></i>High to Low</a\r\n          >\r\n        </li>\r\n        <li>\r\n          <a class=\"dropdown-item\" (click)=\"filter('res')\"\r\n            ><i class=\"fas fa-undo\"></i>Reset</a\r\n          >\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <!-- cake card component  -->\r\n  <app-cakecard *ngFor=\"let cake of cs.cakeSearch\" [cake]=\"cake\"></app-cakecard>\r\n\r\n  <!-- when cake search array is empty -->\r\n  <div *ngIf=\"cs.cakeSearch?.length === 0\" class=\"no-query\">\r\n    <p>\r\n      <img src=\"assets/404.png\" alt=\"no-found\" /><br />\r\n      No Cake found.(404)!!\r\n    </p>\r\n  </div>\r\n\r\n  <!-- Added pagination component -->\r\n  <app-pagination\r\n    [cakesArr]=\"cs.cakeList\"\r\n    class=\"w-100 m-2x\"\r\n    *ngIf=\"cs.cakeList.length\"\r\n  ></app-pagination>\r\n</div>\r\n\r\n<!-- Model to display welcome message -->\r\n<div class=\"model\" *ngIf=\"cs.loading\">\r\n  <h1>\r\n    Welcome\r\n    <span>{{ name ? name : \"\" }}</span>\r\n    To  Bake n’ Take\r\n  </h1>\r\n  <div class=\"lds-ellipsis\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n\r\n  <p>Please wait loading cakes..</p>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent {\r\n  // cake list to sort list of cakes\r\n  cakeList: any;\r\n  loading: any = true;\r\n\r\n  // Storing the login user name\r\n  name: any = localStorage.loginUser\r\n    ? JSON.parse(localStorage.loginUser)\r\n        .name.replace(\r\n          JSON.parse(localStorage.loginUser).name[0],\r\n          JSON.parse(localStorage.loginUser).name[0].toUpperCase()\r\n        )\r\n        .split(' ')[0]\r\n    : '';\r\n  constructor(public cs: CommonService, private http: HttpClient) {\r\n    this.cs.getCakeList();\r\n  }\r\n\r\n  filter(q: any) {\r\n    if (q === 'htl') {\r\n      this.cs.cakeSearch = this.cs.cakeList.sort(\r\n        (cake1: any, cake2: any) => cake2.price - cake1.price\r\n      );\r\n    }\r\n\r\n    if (q === 'lth') {\r\n      this.cs.cakeSearch = this.cs.cakeList.sort(\r\n        (cake1: any, cake2: any) => cake1.price - cake2.price\r\n      );\r\n    }\r\n    // this.cs.getcakes();\r\n    if (q === 'res') { this.cs.reset(); }\r\n\r\n    this.cs.currentp = 1;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminService {\r\n  // store the cake list search results\r\n  cakeSearch: any = [];\r\n  // store the cake list array\r\n  cakeList: any = [];\r\n  cakes: any = [];\r\n  // store the current page\r\n  currentp: any = 1;\r\n\r\n  // loading data status\r\n  loading: any = true;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) {}\r\n  // method to get cake details\r\n  getCakeList() {\r\n    this.loading = true;\r\n    this.http.get(environment.apiUrl + 'allcakes').subscribe(\r\n      (res: any) => {\r\n        this.loading = false;\r\n        if (res.data) {\r\n          this.cakeList = res.data;\r\n          this.cakeSearch = [...this.cakeList];\r\n          this.cakes = [...this.cakeList];\r\n          return;\r\n        }\r\n        this.toastr.warning(res.message);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.toastr.error(err.message, 'Error in loading Cakes', {\r\n          positionClass: 'toast-top-full-width',\r\n          timeOut: 10000,\r\n        });\r\n      }\r\n    );\r\n  }\r\n  // method to vaildate cake details\r\n  validateCakeDetails(cake: any) {\r\n    if (!cake.name || !cake.name.trim()) {\r\n      this.toastr.warning('Cake name should not be empty');\r\n      return false;\r\n    }\r\n    if (!+cake.price || cake.price < 1) {\r\n      this.toastr.warning('Price should be in rupees & greater than ₹1');\r\n      return false;\r\n    }\r\n    if (!+cake.weight) {\r\n      this.toastr.warning(\r\n        'Weight should be in Kg & greater than or equal to 1'\r\n      );\r\n      return false;\r\n    }\r\n    if (!cake.type || !cake.type.trim()) {\r\n      this.toastr.warning('Type field should not be empty');\r\n      return false;\r\n    }\r\n    if (!cake.flavour || !cake.flavour.trim()) {\r\n      this.toastr.warning('Flavour field should not be empty');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://apifromashu.herokuapp.com/api/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CanactivateService implements CanActivate {\r\n  constructor(private router: Router, private toastr: ToastrService) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    // check for the current url is for login, signup or forgetpassword or not\r\n    if (\r\n      state.url === '/login' ||\r\n      state.url === '/signup' ||\r\n      state.url === '/forgetPassword'\r\n    ) {\r\n      // check if user is login\r\n      if (localStorage.loginUser) {\r\n        this.toastr.info('You Are already loged in.');\r\n        this.router.navigate(['/']);\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n    // check if user is not login\r\n    if (!localStorage.loginUser) {\r\n      this.toastr.info('You need to Login First.');\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appTest]'\r\n})\r\nexport class TestDirective {\r\n\r\n  constructor() { \r\n\r\n  }\r\n\r\n}\r\n","<div\r\n  id=\"carouselExampleControls\"\r\n  class=\"carousel slide\"\r\n  data-bs-ride=\"carousel\"\r\n>\r\n  <div class=\"carousel-inner\">\r\n    <!-- Loading carousel Image -->\r\n    <div class=\"carousel-item active\">\r\n      <img\r\n        [src]=\"carouselImgs[0].img\"\r\n        routerLink=\"/shopNow\"\r\n        class=\"d-block w-100\"\r\n        alt=\"...\"\r\n      />\r\n    </div>\r\n    <div class=\"carousel-item\" *ngFor=\"let img of carouselImgs.slice(1)\">\r\n      <img\r\n        [src]=\"img.img\"\r\n        routerLink=\"cake/{{ img.cakeid }}\"\r\n        class=\"d-block w-100\"\r\n        alt=\"...\"\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <!-- carousel navigation button -->\r\n  <button\r\n    class=\"carousel-control-prev\"\r\n    type=\"button\"\r\n    data-bs-target=\"#carouselExampleControls\"\r\n    data-bs-slide=\"prev\"\r\n  >\r\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"visually-hidden\">Previous</span>\r\n  </button>\r\n  <button\r\n    class=\"carousel-control-next\"\r\n    type=\"button\"\r\n    data-bs-target=\"#carouselExampleControls\"\r\n    data-bs-slide=\"next\"\r\n  >\r\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"visually-hidden\">Next</span>\r\n  </button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n// import common services for accessing common data for all component\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-carousel',\r\n  templateUrl: './carousel.component.html',\r\n  styleUrls: ['./carousel.component.css'],\r\n})\r\nexport class CarouselComponent implements OnInit {\r\n  // carousel image array\r\n  carouselImgs: any = this.cs.carouselImgs;\r\n\r\n  constructor(public cs: CommonService) {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"checkout\">\r\n  <div class=\"sidebar\">\r\n    <ul>\r\n      <li class=\"active\">\r\n        <a (click)=\"activate($event)\" routerLink=\"/checkout\">Order Summary</a>\r\n      </li>\r\n      <li>\r\n        <a\r\n          (click)=\"activate($event)\"\r\n          *ngIf=\"cs.orderconfirm\"\r\n          routerLink=\"/checkout/details\"\r\n          >Place Order</a\r\n        >\r\n        <a *ngIf=\"!cs.orderconfirm\" class=\"a-disabled\">Place Order</a>\r\n      </li>\r\n      <li>\r\n        <a\r\n          (click)=\"activate($event)\"\r\n          *ngIf=\"cs.payment\"\r\n          routerLink=\"/checkout/confirm\"\r\n          >Confirm Details</a\r\n        >\r\n        <a *ngIf=\"!cs.payment\" class=\"a-disabled\">Confirm Details</a>\r\n      </li>\r\n      <!-- <li><a routerLink=\"/checkout/payment\">Payment</a></li> -->\r\n    </ul>\r\n  </div>\r\n  <div class=\"mainb\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.css'],\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n  constructor(public cs: CommonService) {}\r\n  ngDoCheck() {\r\n    // check if the user entered name input field or not\r\n    if (!this.cs.order.name) {\r\n      // disable this payment option\r\n      this.cs.payment = false;\r\n    }\r\n  }\r\n\r\n  activate(e: any) {\r\n    // check if payment option is disable\r\n    if (!this.cs.payment) {\r\n      // select the closest a tag to the target\r\n      const el = e.target.closest('a');\r\n\r\n      // check if the a tag is disable\r\n      if (el.className.includes('a-disabled')) {\r\n        return el.parentElement.classList.remove('active');\r\n      }\r\n    }\r\n    // check if order form is enable\r\n    if (this.cs.orderconfirm) {\r\n      // select the all li tag inside the navigation menu\r\n      const allli = e.target.closest('ul').querySelectorAll('li');\r\n\r\n      // remove the active class from all the li tags\r\n      allli.forEach((e: any) => {\r\n        e.classList.remove('active');\r\n      });\r\n      //  add the active class the clicked li tag\r\n      e.target.closest('li').classList.add('active');\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    // select the all li tags and store it as a array\r\n    this.cs.ullist = Array.from(document.querySelectorAll('li'));\r\n  }\r\n}\r\n","<!-- Cake list div to render cake list -->\r\n<div class=\"cake-list\">\r\n  <!-- sort dropdown to sort according to price -->\r\n  <div *ngFor=\"let cake of cs.cakeSearch\" class=\"price-filter\">\r\n    <div class=\"dropdown\">\r\n      <a\r\n        class=\"btn btn-secondary dropdown-toggle\"\r\n        href=\"#\"\r\n        role=\"button\"\r\n        id=\"dropdownMenuLink\"\r\n        data-bs-toggle=\"dropdown\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        <i class=\"fas fa-funnel-dollar\"></i>Sort\r\n      </a>\r\n\r\n      <!-- dropdown menu -->\r\n      <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n        <li>\r\n          <a class=\"dropdown-item\" (click)=\"filter('lth')\"\r\n            ><span class=\"fas fa-sort-amount-down-alt\"></span>Low to High</a\r\n          >\r\n        </li>\r\n        <li>\r\n          <a class=\"dropdown-item\" (click)=\"filter('htl')\"\r\n            ><i class=\"fas fa-sort-amount-up-alt\"></i>High to Low</a\r\n          >\r\n        </li>\r\n        <li>\r\n          <a class=\"dropdown-item\" (click)=\"filter('res')\"\r\n            ><i class=\"fas fa-undo\"></i>Reset</a\r\n          >\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <!-- cake card component  -->\r\n  <app-cakecard *ngFor=\"let cake of cs.cakeSearch\" [cake]=\"cake\"></app-cakecard>\r\n\r\n  <!-- when cake search array is empty -->\r\n  <div *ngIf=\"cs.cakeSearch?.length === 0\" class=\"no-query\">\r\n    <p>\r\n      <img src=\"assets/404.png\" alt=\"no-found\" /><br />\r\n      No Cake found.(404)!!\r\n    </p>\r\n  </div>\r\n\r\n  <!-- Added pagination component -->\r\n  <app-pagination\r\n    [cakesArr]=\"cs.cakeList\"\r\n    class=\"w-100 m-2x\"\r\n    *ngIf=\"cs.cakeList.length\"\r\n  ></app-pagination>\r\n</div>\r\n\r\n<!-- Model to display loading message -->\r\n<div class=\"model\" *ngIf=\"cs.loading\">\r\n  <div class=\"lds-ellipsis\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n\r\n  <p>Please wait loading cakes..</p>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-shop-cakes',\r\n  templateUrl: './shop-cakes.component.html',\r\n  styleUrls: ['./shop-cakes.component.css'],\r\n})\r\nexport class ShopCakesComponent {\r\n  // cake list to sort list of cakes\r\n  cakeList: any;\r\n  loading: any = true;\r\n\r\n  constructor(public cs: CommonService, private http: HttpClient) {\r\n    this.cs.getCakeList();\r\n  }\r\n\r\n  filter(q: any) {\r\n    if (q === 'htl') {\r\n      this.cs.cakeSearch = this.cs.cakeList.sort(\r\n        (cake1: any, cake2: any) => cake2.price - cake1.price\r\n      );\r\n    }\r\n\r\n    if (q === 'lth') {\r\n      this.cs.cakeSearch = this.cs.cakeList.sort(\r\n        (cake1: any, cake2: any) => cake1.price - cake2.price\r\n      );\r\n    }\r\n    // this.cs.getcakes();\r\n    if (q === 'res') { this.cs.reset(); }\r\n\r\n    this.cs.currentp = 1;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommonService {\r\n  // carousel Image array\r\n  carouselImgs: any = [\r\n    {\r\n      img: './assets/Cake-HD.jpg',\r\n      cakeid: '',\r\n    },\r\n    {\r\n      img: 'https://i1.wp.com/www.frugalfeeds.com.au/wp-content/uploads/2016/06/Lindt-Lava-Cake.png',\r\n      cakeid: 1621337480751,\r\n    },\r\n    {\r\n      img: 'https://www.frugalfeeds.nz/wp-content/uploads/2018/09/Burger-King-Molten-Lava-Cake.png',\r\n      cakeid: 1621761236684,\r\n    },\r\n  ];\r\n\r\n  // store Data loading status\r\n  loading: any = true;\r\n  // To store the array of cakes\r\n  cakeList: any = [];\r\n  // to store the array of the search result\r\n  cakeSearch: any = [];\r\n  // to store the cake data.\r\n  cakes: any = [];\r\n  // to store the current page number\r\n  currentp: any = 1;\r\n  // set default deliveryCharge\r\n  deliveryCharge: any = 45;\r\n  // minmum cart value for free delivery\r\n  mincartvalue: any = 500;\r\n  // to store the user details for place order\r\n  order: any = {};\r\n  // store the status of the payment window is open or not\r\n  payment: any = false;\r\n  // store the status of the order form\r\n  orderconfirm: any = false;\r\n  // store the navigation side bar menu\r\n  ullist: any = [];\r\n  constructor(private http: HttpClient, private toastr: ToastrService) {}\r\n\r\n  // method to get the cake data\r\n  getCakeList(): void {\r\n    // api hit the get cakes data\r\n    this.http.get(environment.apiUrl + 'allcakes').subscribe(\r\n      // handle response\r\n      (res: any) => {\r\n        // to hide welcome loader\r\n        this.loading = false;\r\n        // check if data res data is there or not\r\n        if (res.data) {\r\n          // storing res data to the variable\r\n          this.cakeList = res.data;\r\n          this.cakeSearch = [...this.cakeList];\r\n          this.cakes = [...this.cakeList];\r\n        }\r\n      },\r\n      // handle error\r\n      (err) => {\r\n        // show error message\r\n        console.log(err);\r\n        this.toastr.error(err.message, 'Error in loading Cakes', {\r\n          positionClass: 'toast-top-full-width',\r\n          timeOut: 10000,\r\n        });\r\n      }\r\n    );\r\n  }\r\n  // method to clear the sorting\r\n  reset(): void {\r\n    this.cakeList = [...this.cakes];\r\n  }\r\n  // method to validate email id\r\n  validateEmail(email: any): boolean {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n  // method to validate login session\r\n  validatelogin(): void {\r\n    // hit get request to validate login token\r\n    this.http.get(environment.apiUrl + 'getuserdetails').subscribe(\r\n      (res: any) => {\r\n        if (res.ok === false) {\r\n          localStorage.removeItem('loginUser');\r\n        }\r\n      },\r\n      (err: any) => {\r\n        if (err.ok === false) {\r\n          localStorage.removeItem('loginUser');\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // validate 10 digit phone number\r\n  validatephonenumber(number: any): boolean {\r\n    const phoneno = /^\\d{10}$/;\r\n    if (number.match(phoneno)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  // validate pincode\r\n  validatepincode(code: any): boolean {\r\n    return /^(\\d{4}|\\d{6})$/.test(code);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CommonService } from './services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = \"Bake n’ Take\";\r\n  constructor(private cs: CommonService) {\r\n    // call To validate login token\r\n    cs.validatelogin();\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<!-- loader -->\r\n<ngx-ui-loader></ngx-ui-loader>\r\n<!-- load routes -->\r\n<router-outlet></router-outlet>\r\n","<div class=\"admin flex\">\r\n  <header class=\"admin-header flex\">\r\n    <h1>Cakes</h1>\r\n    <!-- add cake button -->\r\n    <div class=\"cart-right\">\r\n      <button class=\"btn btn-primary click-effect\" routerLink=\"/admin/addcake\">\r\n        <i class=\"far fa-plus-square fs-2x\"></i> Add Cake\r\n      </button>\r\n    </div>\r\n  </header>\r\n  <div>\r\n    <form\r\n      action=\"#\"\r\n      class=\"form-group flex admin-search\"\r\n      (submit)=\"search()\"\r\n      *ngIf=\"!admin.loading\"\r\n    >\r\n      <input\r\n        type=\"search\"\r\n        name=\"search\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"searchquery\"\r\n        placeholder=\"search..\"\r\n      />\r\n      <button type=\"button\" class=\"btn\"><i class=\"fas fa-search\"></i></button>\r\n    </form>\r\n  </div>\r\n\r\n  <main class=\"admin-main flex\">\r\n    <div class=\"admin-products flex\">\r\n      <!-- cake data loading message -->\r\n      <ul class=\"admin-products-list flex\" *ngIf=\"admin.loading\">\r\n        <p *ngIf=\"admin.loading !== 'upldating'\">\r\n          <img\r\n            class=\"loading\"\r\n            src=\"https://i.stack.imgur.com/hzk6C.gif\"\r\n            alt=\"\"\r\n          />\r\n          Cakes...\r\n        </p>\r\n      </ul>\r\n      <!-- no cake found message -->\r\n      <ul\r\n        class=\"admin-products-list flex\"\r\n        *ngIf=\"!admin.loading && admin.cakeSearch.length === 0\"\r\n      >\r\n        <p class=\"notfound\" *ngIf=\"admin.loading !== 'upldating'\">\r\n          <img class=\"loading\" src=\"assets/notFound.png\" alt=\"\" />\r\n          No Cake found !!! For your Search Query.\r\n        </p>\r\n      </ul>\r\n      <!-- cake list  -->\r\n      <ul\r\n        class=\"admin-products-list flex\"\r\n        *ngIf=\"!admin.loading && admin.cakeSearch.length > 0\"\r\n      >\r\n        <li class=\"products-header\">\r\n          <p>Products</p>\r\n\r\n          <p (click)=\"sortcake()\" class=\"price-filter\">\r\n            Price <i class=\"fas fa-sort\"></i>\r\n          </p>\r\n          <p>Action</p>\r\n        </li>\r\n        <li class=\"products\" *ngFor=\"let item of admin.cakeSearch\">\r\n          <p class=\"item-title\">\r\n            <img [src]=\"item.image\" class=\"item-img\" alt=\"\" />\r\n            <span\r\n              ><p>{{ item.name }}</p>\r\n            </span>\r\n          </p>\r\n          <p>{{ item.price | currency: \"INR\" }}</p>\r\n          <!-- edit form button -->\r\n          <p>\r\n            <button class=\"btn\" routerLink=\"/admin/editcake/{{ item.cakeid }}\">\r\n              <i class=\"fas fa-edit\"></i>\r\n            </button>\r\n          </p>\r\n        </li>\r\n        <li class=\"products-header\"></li>\r\n      </ul>\r\n    </div>\r\n  </main>\r\n  <app-pagination-admin\r\n    *ngIf=\"!admin.loading && admin.cakeSearch.length > 0\"\r\n    [cakesArr]=\"admin.cakeList\"\r\n  ></app-pagination-admin>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AdminService } from '../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css'],\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  // store the search query\r\n  searchquery: any;\r\n  // store the default sort status\r\n  sort: any = 'lth';\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    public admin: AdminService,\r\n    private router: Router\r\n  ) {\r\n    // check whether the user is admin or not\r\n    if (\r\n      !(\r\n        JSON.parse(localStorage.loginUser).email === 'shantanu.sharma@walkingtree.tech'\r\n      )\r\n    ) {\r\n      toastr.info('Only Admin User Can Access Admin Panel');\r\n      router.navigate(['/']);\r\n    }\r\n\r\n    // method call to get cake lists\r\n    this.admin.getCakeList();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  ngDoCheck() {}\r\n  // method to perform search\r\n  search() {\r\n    // filter the cake list according the search query\r\n    if (this.searchquery) {\r\n      this.admin.cakeList = [...this.admin.cakes].filter((cake: any) =>\r\n        cake.name.toLowerCase().includes(this.searchquery.toLowerCase())\r\n      );\r\n    } else {\r\n      this.admin.cakeList = [...this.admin.cakes];\r\n    }\r\n    // Set current page to one\r\n    this.admin.currentp = 1;\r\n  }\r\n\r\n  // method to sort cake list according to price\r\n  sortcake() {\r\n    // sort cake array from high to low price\r\n    if (this.sort === 'htl') {\r\n      this.admin.cakeSearch = this.admin.cakeList.sort(\r\n        (cake1: any, cake2: any) => cake2.price - cake1.price\r\n      );\r\n      this.sort = 'lth';\r\n      return;\r\n    }\r\n    // sort cake array from low to high  price\r\n    if (this.sort === 'lth') {\r\n      this.admin.cakeSearch = this.admin.cakeList.sort(\r\n        (cake1: any, cake2: any) => cake1.price - cake2.price\r\n      );\r\n      this.sort = 'htl';\r\n      return;\r\n    }\r\n  }\r\n}\r\n","<nav aria-label=\"Page navigation example\" *ngIf=\"noOfpages > 1\">\r\n  <ul class=\"pagination justify-content-center\">\r\n    <li class=\"page-item {{ admin.currentp === 1 ? 'disabled' : '' }}\">\r\n      <a\r\n        class=\"page-link click-effect\"\r\n        (click)=\"openPage(admin.currentp - 1)\"\r\n        tabindex=\"-1\"\r\n        aria-disabled=\"true\"\r\n        >Previous</a\r\n      >\r\n    </li>\r\n\r\n    <li class=\"page-item  {{ admin.currentp === 1 ? 'active' : '' }}\">\r\n      <span (click)=\"openPage(1)\" class=\"click-effect\">\r\n        <a class=\"page-link\">1</a>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item disabled\">\r\n      <span *ngIf=\"admin.currentp >= 3\">\r\n        <a class=\"page-link\">...</a>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item\" *ngIf=\"admin.currentp - 1 > 1\">\r\n      <span (click)=\"openPage(admin.currentp - 1)\" class=\"click-effect\">\r\n        <a class=\"page-link\">{{ admin.currentp - 1 }}</a>\r\n      </span>\r\n    </li>\r\n    <li\r\n      class=\"page-item active\"\r\n      *ngIf=\"admin.currentp > 1 && admin.currentp !== noOfpages\"\r\n    >\r\n      <span (click)=\"openPage(admin.currentp)\" class=\"click-effect\">\r\n        <a class=\"page-link\">{{ admin.currentp }}</a>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item\" *ngIf=\"admin.currentp + 1 < noOfpages\">\r\n      <span (click)=\"openPage(admin.currentp + 1)\" class=\"click-effect\">\r\n        <a class=\"page-link\">{{ admin.currentp + 1 }}</a>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item disabled\" *ngIf=\"admin.currentp < noOfpages - 2\">\r\n      <span>\r\n        <a class=\"page-link\">...</a>\r\n      </span>\r\n    </li>\r\n    <li\r\n      *ngIf=\"noOfpages > 1\"\r\n      class=\"page-item {{ admin.currentp === noOfpages ? 'active' : '' }}\"\r\n    >\r\n      <span class=\"click-effect\" (click)=\"openPage(noOfpages)\">\r\n        <a class=\"page-link\">{{ noOfpages }}</a>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item {{ admin.currentp === noOfpages ? 'disabled' : '' }}\">\r\n      <a class=\"page-link click-effect\" (click)=\"openPage(+admin.currentp + 1)\"\r\n        >Next</a\r\n      >\r\n    </li>\r\n  </ul>\r\n</nav>\r\n","import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AdminService } from '../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-pagination-admin',\r\n  templateUrl: './pagination-admin.component.html',\r\n  styleUrls: ['./pagination-admin.component.css'],\r\n})\r\nexport class PaginationAdminComponent {\r\n  // to store the data about page\r\n  start: any;\r\n  end: any;\r\n  noOfpages: any;\r\n  resultPerPage: any = 12;\r\n  // To take the array of cakes\r\n  @Input() cakesArr: any = [];\r\n\r\n  constructor(public admin: AdminService, private router: Router) {}\r\n\r\n  // method to change current page value\r\n  openPage(page: any) {\r\n    this.admin.currentp = page;\r\n  }\r\n\r\n  // funtion the genrate data for each page\r\n  pagination() {\r\n    // find total number of pages\r\n    this.noOfpages = Math.ceil(this.cakesArr.length / this.resultPerPage);\r\n    // starting index of the cake array\r\n    this.start = (this.admin.currentp - 1) * this.resultPerPage;\r\n    // ending index of the cake array\r\n    this.end = this.admin.currentp * this.resultPerPage;\r\n    // display array\r\n    this.admin.cakeSearch = [...this.cakesArr].slice(this.start, this.end);\r\n    return;\r\n  }\r\n\r\n  ngDoCheck() {\r\n    // pagination method call whenever any changes happens\r\n    setTimeout(() => {\r\n      this.pagination();\r\n    }, 10);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {\r\n  NgxUiLoaderConfig,\r\n  NgxUiLoaderModule,\r\n  PB_DIRECTION,\r\n  POSITION,\r\n  SPINNER,\r\n} from 'ngx-ui-loader';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CarouselComponent } from './carousel/carousel.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CakecardComponent } from './cakecard/cakecard.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { PaginationComponent } from './pagination/pagination.component';\r\nimport { CakeDetailsComponent } from './cake-details/cake-details.component';\r\nimport { SearchresultsComponent } from './searchresults/searchresults.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { InterceptorService } from './auth/interceptor.service';\r\nimport { CanactivateService } from './guards/canactivate.service';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { CheckoutComponent } from './checkout/checkout.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { ShopCakesComponent } from './shop-cakes/shop-cakes.component';\r\nimport { PaginationAdminComponent } from './pagination-admin/pagination-admin.component';\r\nimport { TestDirective } from './test.directive';\r\n\r\nconst ngxUiLoaderConfig: NgxUiLoaderConfig = {\r\n  bgsColor: '#fff',\r\n  bgsPosition: POSITION.bottomCenter,\r\n  bgsSize: 4,\r\n  fgsColor: '#f4ac32',\r\n  pbColor: '#f4ac32',\r\n  bgsType: SPINNER.ballSpinClockwise, // background spinner type\r\n  fgsType: SPINNER.ballSpin, // foreground spinner type\r\n  pbDirection: PB_DIRECTION.leftToRight, // progress bar direction\r\n  pbThickness: 4, // progress bar thickness\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    CarouselComponent,\r\n    HomeComponent,\r\n    CakecardComponent,\r\n    PaginationComponent,\r\n    CakeDetailsComponent,\r\n    SearchresultsComponent,\r\n    LoginComponent,\r\n    ForgetpassComponent,\r\n    SignupComponent,\r\n    CartComponent,\r\n    OrdersComponent,\r\n    CheckoutComponent,\r\n    AdminComponent,\r\n    ShopCakesComponent,\r\n    PaginationAdminComponent,\r\n    TestDirective,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule ,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot({\r\n      timeOut: 3000,\r\n      positionClass: 'toast-top-left',\r\n      preventDuplicates: true,\r\n      enableHtml: true,\r\n    }),\r\n    BrowserModule,\r\n\r\n    // Import NgxUiLoaderModule\r\n    NgxUiLoaderModule.forRoot(ngxUiLoaderConfig),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: InterceptorService,\r\n      multi: true,\r\n    },\r\n    CanactivateService,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css'],\r\n})\r\nexport class CartComponent {\r\n  qty: any = 1;\r\n\r\n  deliveryCharge: any = 0;\r\n  public cartItems: any = [];\r\n  loading: any = true;\r\n  totalPrice: any = 0;\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private cs: CommonService,\r\n    private http: HttpClient,\r\n    private routes: ActivatedRoute\r\n  ) {\r\n    // fetch data from the route\r\n    this.routes.data.subscribe((data) => {\r\n      this.cartItems = data[0].data;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  ngDoCheck() {\r\n    // set the total price\r\n    this.totalPrice = this.cartItems.reduce(\r\n      (acc: any, item: any) => item.price * item.quantity + acc,\r\n      0\r\n    );\r\n\r\n    // check is total price is greater then minimum cart total price or not\r\n    if (this.totalPrice > this.cs.mincartvalue) { this.deliveryCharge = 0; }\r\n    else { this.deliveryCharge = this.cs.deliveryCharge; }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // method to remove item from cart\r\n  remove(id: any) {\r\n    // updating the cart items\r\n    this.loading = 'upldating';\r\n\r\n    // hit post request to remove item from cart\r\n    this.http\r\n      .post(environment.apiUrl + 'removecakefromcart', { cakeid: id })\r\n      .subscribe(\r\n        (res: any) => {\r\n          // check whether the item removed successful or not\r\n          if (res.message === 'Removed  item from cart') {\r\n            // find the index of the removed cake item\r\n            const index = this.cartItems.findIndex(\r\n              (cake: any) => cake.cakeid === id\r\n            );\r\n            // show success message\r\n            this.toastr.success(\r\n              `Removed ${this.cartItems[index].name} from cart.`\r\n            );\r\n\r\n            // removing cart item for cart items array\r\n            this.cartItems.splice(index, 1);\r\n            // data is loading\r\n            this.loading = false;\r\n            return;\r\n          }\r\n          this.toastr.warning(res.message);\r\n        },\r\n        (err: any) => {\r\n          // display the error message\r\n          console.log(err);\r\n          this.toastr.error(err.message);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"cart flex\">\r\n  <header class=\"cart-header flex\">\r\n    <h1>Your Cart</h1>\r\n    <div class=\"cart-right\">\r\n      <button\r\n        class=\"btn btn-primary click-effect\"\r\n        routerLink=\"/checkout\"\r\n        *ngIf=\"!loading && totalPrice\"\r\n      >\r\n        Checkout\r\n      </button>\r\n    </div>\r\n  </header>\r\n\r\n  <main class=\"cart-main flex\">\r\n    <div class=\"cart-products flex\">\r\n      <ul class=\"cart-products-list flex\" *ngIf=\"loading\">\r\n        <p *ngIf=\"loading !== 'upldating'\">\r\n          <img\r\n            class=\"loading\"\r\n            src=\"https://i.stack.imgur.com/hzk6C.gif\"\r\n            alt=\"\"\r\n          />\r\n          Your Cart Items\r\n        </p>\r\n        <p *ngIf=\"loading === 'upldating'\">\r\n          <img\r\n            class=\"loading\"\r\n            src=\"https://xtremexmartialarts.com/wp-content/uploads/2020/07/anim-circ-preloader.gif\"\r\n            alt=\"\"\r\n          />\r\n          Your Cart Items\r\n        </p>\r\n      </ul>\r\n      <ul class=\"cart-products-list flex\" *ngIf=\"!loading && !totalPrice\">\r\n        <p class=\"cart-empty\">\r\n          <img\r\n            class=\"loading\"\r\n            src=\"https://www.pngfind.com/pngs/b/272-2727925_cart-png.png\"\r\n            alt=\"\"\r\n          />\r\n          <span>\r\n            Your Cart is Empty.\r\n            <a routerLink=\"/\">Click here</a> to see Cakes</span\r\n          >\r\n        </p>\r\n      </ul>\r\n      <ul class=\"cart-products-list flex\" *ngIf=\"!loading && totalPrice\">\r\n        <li class=\"products-header\">\r\n          <p>Products</p>\r\n          <p>Price</p>\r\n          <p>Qty</p>\r\n          <p>Subtotal</p>\r\n        </li>\r\n        <li class=\"order-products\" *ngFor=\"let item of cartItems\">\r\n          <p class=\"item-title\">\r\n            <img\r\n              [src]=\"item.image\"\r\n              class=\"item-img click-effect\"\r\n              alt=\"\"\r\n              routerLink=\"/cakes/{{ item.cakeid }}\"\r\n            />\r\n            <span\r\n              ><p class=\"click-effect\" routerLink=\"/cakes/{{ item.cakeid }}\">\r\n                {{ item.name }}\r\n              </p>\r\n              <p class=\"small-text\">Weight: {{ item.weight }} kg</p>\r\n            </span>\r\n          </p>\r\n          <p>{{ item.price | currency: \"INR\" }}</p>\r\n          <p>\r\n            <input type=\"number\" [(ngModel)]=\"item.quantity\" disabled /><i\r\n              (click)=\"remove(item.cakeid)\"\r\n              class=\"fas fa-trash click-effect\"\r\n            ></i>\r\n          </p>\r\n          <p>{{ item.quantity * item.price | currency: \"INR\" }}</p>\r\n        </li>\r\n        <li class=\"products-header\"></li>\r\n        <li class=\"products-header total\">\r\n          <p>\r\n            <i class=\"fas fa-truck\"></i>\r\n            {{\r\n              deliveryCharge\r\n                ? \" Delivery Charge: ₹\" + deliveryCharge\r\n                : \"Free Delivery\"\r\n            }}\r\n          </p>\r\n          <p></p>\r\n          <p>Total :</p>\r\n          <p class=\"total\">\r\n            <span class=\"delivery-charge\">\r\n              {{ totalPrice | currency: \"INR\" }}</span\r\n            >\r\n            <span class=\"delivery-charge\">\r\n              + {{ deliveryCharge | currency: \"INR\" }}</span\r\n            >\r\n\r\n            <span class=\"total-price\">\r\n              {{\r\n                totalPrice\r\n                  ? totalPrice + deliveryCharge\r\n                  : (totalPrice | currency: \"INR\")\r\n              }}\r\n            </span>\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </main>\r\n</div>\r\n<div class=\"modal\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Modal title</h5>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-close\"\r\n          data-bs-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>Modal body text goes here.</p>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n          Close\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"next\">\r\n          Save changes\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InterceptorService implements HttpInterceptor {\r\n  constructor() {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    // check whether the user is login or not\r\n    if (localStorage.loginUser) {\r\n      // add the authtoken property in the response header\r\n      req = req.clone({\r\n        setHeaders: {\r\n          authtoken: JSON.parse(localStorage.loginUser).token,\r\n        },\r\n      });\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n}\r\n","<nav aria-label=\"Page navigation example\" *ngIf=\"noOfpages > 1\">\r\n  <ul class=\"pagination justify-content-center\">\r\n    <li class=\"page-item {{ cs.currentp === 1 ? 'disabled' : '' }}\">\r\n      <a\r\n        class=\"page-link click-effect\"\r\n        (click)=\"openPage(cs.currentp - 1)\"\r\n        tabindex=\"-1\"\r\n        aria-disabled=\"true\"\r\n        >Previous</a\r\n      >\r\n    </li>\r\n\r\n    <li class=\"page-item  {{ cs.currentp === 1 ? 'active' : '' }}\">\r\n      <span (click)=\"openPage(1)\" class=\"click-effect\">\r\n        <a class=\"page-link\">1</a>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item disabled\">\r\n      <span *ngIf=\"cs.currentp >= 3\">\r\n        <a class=\"page-link\">...</a>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item\" *ngIf=\"cs.currentp - 1 > 1\">\r\n      <span (click)=\"openPage(cs.currentp - 1)\" class=\"click-effect\">\r\n        <a class=\"page-link\">{{ cs.currentp - 1 }}</a>\r\n      </span>\r\n    </li>\r\n    <li\r\n      class=\"page-item active\"\r\n      *ngIf=\"cs.currentp > 1 && cs.currentp !== noOfpages\"\r\n    >\r\n      <span (click)=\"openPage(cs.currentp)\" class=\"click-effect\">\r\n        <a class=\"page-link\">{{ cs.currentp }}</a>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item\" *ngIf=\"cs.currentp + 1 < noOfpages\">\r\n      <span (click)=\"openPage(cs.currentp + 1)\" class=\"click-effect\">\r\n        <a class=\"page-link\">{{ cs.currentp + 1 }}</a>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item disabled\" *ngIf=\"cs.currentp < noOfpages - 2\">\r\n      <span>\r\n        <a class=\"page-link\">...</a>\r\n      </span>\r\n    </li>\r\n    <li\r\n      *ngIf=\"noOfpages > 1\"\r\n      class=\"page-item {{ cs.currentp === noOfpages ? 'active' : '' }}\"\r\n    >\r\n      <span class=\"click-effect\" (click)=\"openPage(noOfpages)\">\r\n        <a class=\"page-link\">{{ noOfpages }}</a>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item {{ cs.currentp === noOfpages ? 'disabled' : '' }}\">\r\n      <a class=\"page-link click-effect\" (click)=\"openPage(+cs.currentp + 1)\"\r\n        >Next</a\r\n      >\r\n    </li>\r\n  </ul>\r\n</nav>\r\n","import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.css'],\r\n})\r\nexport class PaginationComponent {\r\n  // to store the data about page\r\n  start: any;\r\n  end: any;\r\n  noOfpages: any;\r\n  resultPerPage: any = 12;\r\n  // To take the array of cakes\r\n  @Input() cakesArr: any = [];\r\n\r\n  constructor(\r\n    public cs: CommonService,\r\n    private admin: AdminService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  // method to change current page value\r\n  openPage(page: any) {\r\n    this.cs.currentp = page;\r\n  }\r\n\r\n  // funtion the genrate data for each page\r\n  pagination() {\r\n    // find total number of pages\r\n    this.noOfpages = Math.ceil(this.cakesArr.length / this.resultPerPage);\r\n    // starting index of the cake array\r\n    this.start = (this.cs.currentp - 1) * this.resultPerPage;\r\n    // ending index of the cake array\r\n    this.end = this.cs.currentp * this.resultPerPage;\r\n    // display array\r\n    this.cs.cakeSearch = [...this.cakesArr].slice(this.start, this.end);\r\n    return;\r\n  }\r\n\r\n  ngDoCheck() {\r\n    // pagination method call whenever any changes happens\r\n    setTimeout(() => {\r\n      this.pagination();\r\n    }, 10);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Event,\r\n  NavigationCancel,\r\n  NavigationEnd,\r\n  NavigationError,\r\n  NavigationStart,\r\n  Router,\r\n} from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  // property to store search query\r\n  searchQ: any;\r\n  // property to store the status of user login\r\n  userLogin: any = false;\r\n  // property to store the status of data loaded or not\r\n  loading: any = false;\r\n  // property to store login user email\r\n  useremail: any;\r\n  // admin search status\r\n  searchAdmin: any = true;\r\n  constructor(\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private ngxloader: NgxUiLoaderService\r\n  ) {\r\n    // subscribing to router events and reading events by importing Event class\r\n    this.router.events.subscribe((event: Event) => {\r\n      // destructuring event object\r\n      const e: any = { ...event };\r\n\r\n      // condition to check router URL\r\n      if (e.url === '/cart' || e.url === '/myorders') {\r\n        // applying switch case for handling the navigation events.\r\n        switch (true) {\r\n          // Handle NavigationStart event\r\n          case event instanceof NavigationStart: {\r\n            // Show loader\r\n            this.ngxloader.start();\r\n\r\n            break;\r\n          }\r\n\r\n          case event instanceof NavigationEnd:\r\n          case event instanceof NavigationCancel:\r\n          case event instanceof NavigationError: {\r\n            // hide loader\r\n            this.ngxloader.stop();\r\n\r\n            break;\r\n          }\r\n          default: {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // function to handle search\r\n  search() {\r\n    // check if searchQ is empty or not.\r\n    if (this.searchQ) {\r\n      const search = this.searchQ;\r\n\r\n      // redirecting to search result display page\r\n      this.router.navigate(['/search'], {\r\n        // adding search query as the queryparams q\r\n        queryParams: { q: search },\r\n      });\r\n    }\r\n    // set seatch field empty after search\r\n    this.searchQ = '';\r\n  }\r\n\r\n  // whenever any changes happens\r\n  ngDoCheck() {\r\n    // setting user email when ever any changes happens\r\n    this.useremail = localStorage.loginUser\r\n      ? JSON.parse(localStorage.loginUser).email\r\n      : null;\r\n\r\n    // checking for the loging status\r\n    if (localStorage.loginUser) { this.userLogin = true; }\r\n    if (!localStorage.loginUser) {\r\n      this.userLogin = false;\r\n    }\r\n\r\n    if (this.router.url === '/admin') { this.searchAdmin = false; }\r\n    else { this.searchAdmin = true; }\r\n  }\r\n\r\n  // function to logout user\r\n  logout() {\r\n    localStorage.removeItem('loginUser');\r\n    this.toastr.success('Logout Successfully!!');\r\n    this.router.navigate(['/login']);\r\n  }\r\n  ngOnInit(): void {}\r\n}\r\n","<nav class=\"navbar sticky-top navbar-expand-lg navbar-light\">\r\n  <div class=\"container-fluid\">\r\n    <!-- Added Logo and brand name -->\r\n    <a class=\"navbar-brand\"\r\n      ><img src=\"assets/logo.png\" alt=\"cake-house\" class=\"logo\" />\r\n      <span class=\"highlight\" routerLink=\"/\" style=\"cursor: pointer\">\r\n        Bake n’ Take</span\r\n      >\r\n      <!-- Admin button to redirect to admin panel -->\r\n      <button\r\n        *ngIf=\"userLogin && useremail === 'shantanu.sharma@walkingtree.tech'\"\r\n        class=\"btn btn-dark btn-border-primary btn-admin\"\r\n        type=\"button\"\r\n        routerLink=\"/admin\"\r\n      >\r\n        <i class=\"fas fa-user-shield\"></i></button\r\n    ></a>\r\n\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"collapse\"\r\n      data-bs-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <!-- Search form  to implement search  -->\r\n      <form class=\"d-flex form-search\" *ngIf=\"searchAdmin\">\r\n        <input\r\n          class=\"form-control\"\r\n          name=\"search\"\r\n          type=\"search\"\r\n          [(ngModel)]=\"searchQ\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n        />\r\n        <button\r\n          class=\"btn btn-secondary btn-search\"\r\n          (click)=\"search()\"\r\n          type=\"submit\"\r\n        >\r\n          <i class=\"fas fa-search\"></i>\r\n        </button>\r\n      </form>\r\n      <!-- Navigation buttons -->\r\n      <form class=\"flex nav-btn\">\r\n        <button\r\n          *ngIf=\"!userLogin\"\r\n          class=\"btn btn-warning btn-border-warning\"\r\n          type=\"button\"\r\n          routerLink=\"/login\"\r\n        >\r\n          <i class=\"fas fa-user\"></i> Login\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"userLogin\"\r\n          class=\"btn btn-dark btn-border-primary\"\r\n          type=\"button\"\r\n          routerLink=\"/cart\"\r\n        >\r\n          <i class=\"fas fa-shopping-cart\"></i>\r\n        </button>\r\n        <button\r\n          *ngIf=\"userLogin\"\r\n          class=\"btn btn-dark btn-border-primary\"\r\n          type=\"button\"\r\n          routerLink=\"/myorders\"\r\n        >\r\n          <i class=\"fas fa-shopping-bag\"></i> Order\r\n        </button>\r\n        <button\r\n          *ngIf=\"userLogin\"\r\n          class=\"btn btn-primary btn-border-warning\"\r\n          type=\"button\"\r\n          (click)=\"logout()\"\r\n        >\r\n          <i class=\"fas fa-user\"></i> Logout\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-searchresults',\r\n  templateUrl: './searchresults.component.html',\r\n  styleUrls: ['./searchresults.component.css'],\r\n})\r\nexport class SearchresultsComponent implements OnInit {\r\n  minPrice: any;\r\n  maxPrice: any;\r\n  loading: any = true;\r\n  cakesList: any = [];\r\n  cakefilter: any = [];\r\n  constructor(\r\n    public cs: CommonService,\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private toastr: ToastrService\r\n  ) {\r\n    // fetch query string from the route\r\n    this.route.queryParams.subscribe((query: any) => {\r\n      this.loading = true;\r\n      // hit get request to fetch search results\r\n      this.http.get(environment.apiUrl + 'searchcakes?q=' + query.q).subscribe(\r\n        (res: any) => {\r\n          this.cakefilter = res.data;\r\n          // for sortByPrice method\r\n          this.cakesList = [...this.cakefilter];\r\n          this.loading = false;\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  filterByPrice() {\r\n    //  validate maxprice and minprice\r\n    if (this.maxPrice <= this.minPrice) {\r\n      this.toastr.info('Min-Price Should be smaller then Max-Price');\r\n      return;\r\n    }\r\n\r\n    if (this.minPrice || this.maxPrice) {\r\n      // filter cake list\r\n      this.cakesList = this.cakefilter.filter(\r\n        (e: any) =>\r\n          (this.minPrice ? e.price >= this.minPrice : true) &&\r\n          (this.maxPrice ? e.price <= this.maxPrice : true)\r\n      );\r\n      if (this.cakesList.length > 0) { return; }\r\n      else {\r\n        this.toastr.info(\r\n          `No Cake found of price  ${\r\n            this.minPrice && this.maxPrice\r\n              ? `between ₹${this.minPrice}-₹${this.maxPrice}`\r\n              : `₹${this.minPrice ? this.minPrice : this.maxPrice}`\r\n          }`\r\n        );\r\n      }\r\n    }\r\n\r\n    this.cakesList = [...this.cakefilter];\r\n  }\r\n}\r\n","<div class=\"sort-by-price\" *ngIf=\"cakesList.length > 0\">\r\n  <form class=\"row g-3\">\r\n    <!-- price filter -->\r\n    <div class=\"col-auto\">\r\n      <label for=\"inputPassword2\" class=\"visually-hidden\">min-Price</label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control\"\r\n        id=\"minPrice\"\r\n        name=\"minPrice\"\r\n        placeholder=\"Min-Price\"\r\n        [(ngModel)]=\"minPrice\"\r\n      />\r\n    </div>\r\n    <div class=\"col-auto\">\r\n      <label for=\"inputPassword2\" class=\"visually-hidden\">Max-price</label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control\"\r\n        id=\"maxPrice\"\r\n        name=\"maxPrice\"\r\n        placeholder=\"Max-price\"\r\n        [(ngModel)]=\"maxPrice\"\r\n      />\r\n    </div>\r\n    <div class=\"col-auto\">\r\n      <button\r\n        type=\"submit\"\r\n        (click)=\"filterByPrice()\"\r\n        class=\"btn btn-primary mb-3\"\r\n      >\r\n        Filter\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div class=\"cake-list\">\r\n  <!-- display search result -->\r\n  <app-cakecard *ngFor=\"let cake of cakesList\" [cake]=\"cake\"></app-cakecard>\r\n  <!-- no search found -->\r\n  <div class=\"no-query\">\r\n    <p *ngIf=\"!loading && cakesList.length === 0\">\r\n      <img src=\"assets/404.png\" alt=\"no-found\" /><br />\r\n      No Cake found!. For your Search Query!\r\n    </p>\r\n    <!-- loading message -->\r\n    <p *ngIf=\"loading\" class=\"flex\">\r\n      <img class=\"loading\" src=\"https://i.stack.imgur.com/hzk6C.gif\" alt=\"\" />\r\n      Search Results\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CartService implements Resolve<any> {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    // get user cart details\r\n    return this.http.post(environment.apiUrl + 'cakecart', {}).pipe();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css'],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  // object to store the user data using ngModel\r\n  user: any = {};\r\n\r\n  constructor(\r\n    private ls: CommonService,\r\n    private http: HttpClient,\r\n    private route: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  signUp() {\r\n    // validate email id\r\n    if (!this.ls.validateEmail(this.user.email)) {\r\n      this.toastr.warning('PLease Enter the Correct Email Id.');\r\n      return;\r\n    }\r\n\r\n    // validate all input fileds\r\n    if (\r\n      !this.user.name ||\r\n      !this.user.name.trim() ||\r\n      !this.user.password ||\r\n      !this.user.password.trim()\r\n    ) {\r\n      this.toastr.warning('Please Fill the all input Fields.');\r\n      return;\r\n    }\r\n\r\n    // validate name & password input field\r\n    if (this.user.name.startsWith(' ') || this.user.password.startsWith(' ')) {\r\n      this.toastr.warning('User name/password should not start with space.');\r\n      return;\r\n    }\r\n\r\n    // hit post request to signup user\r\n    this.http.post(environment.apiUrl + 'register', this.user).subscribe(\r\n      (res: any) => {\r\n        // check whether user already exists or not\r\n        if (res.message === 'User Already Exists') {\r\n          this.toastr.info(`${res.message}. Redirecting to Login Page.`);\r\n        } else {\r\n          this.toastr.success(res.message);\r\n        }\r\n\r\n        setTimeout(() => {\r\n          this.toastr.info('Verification mail is sended to you mail ID.');\r\n          this.toastr.info('Please verify your email Id to login.');\r\n          // redirecting user to the login page\r\n          this.route.navigate(['/login'], {\r\n            queryParams: { q: this.user.email },\r\n          });\r\n        }, 2000);\r\n      },\r\n      (err: any) => {\r\n        // display error message\r\n        console.log(err);\r\n\r\n        this.toastr.error(err.message);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"signup-section\">\r\n  <h1>SignUp To  Bake n’ Take</h1>\r\n  <form>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Name</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        aria-describedby=\"emailHelp\"\r\n        [(ngModel)]=\"user.name\"\r\n      />\r\n      <label for=\"email\">Email address</label>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        id=\"email\"\r\n        name=\"email\"\r\n        aria-describedby=\"emailHelp\"\r\n        [(ngModel)]=\"user.email\"\r\n      />\r\n      <!-- <small id=\"emailHelp\" class=\"form-text text-muted\"\r\n          >We'll never share your email with anyone else.</small\r\n        > -->\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        [(ngModel)]=\"user.password\"\r\n        class=\"form-control\"\r\n        id=\"password\"\r\n      />\r\n    </div>\r\n\r\n    <button type=\"submit\" (click)=\"signUp()\" class=\"btn btn-primary\">\r\n      SignUp\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CakeDetailsComponent } from './cake-details/cake-details.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\r\nimport { CanactivateService } from './guards/canactivate.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { CartService } from './resolvers/cart.service';\r\nimport { OrdersService } from './resolvers/orders.service';\r\nimport { SearchresultsComponent } from './searchresults/searchresults.component';\r\nimport { ShopCakesComponent } from './shop-cakes/shop-cakes.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\n// Set Routes here\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'cake/:id', component: CakeDetailsComponent },\r\n  { path: 'search', component: SearchresultsComponent },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    canActivate: [CanactivateService],\r\n  },\r\n  {\r\n    path: 'forgetPassword',\r\n    component: ForgetpassComponent,\r\n    canActivate: [CanactivateService],\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent,\r\n    canActivate: [CanactivateService],\r\n  },\r\n  {\r\n    path: 'cart',\r\n    component: CartComponent,\r\n    canActivate: [CanactivateService],\r\n    resolve: [CartService],\r\n  },\r\n  {\r\n    path: 'myorders',\r\n    component: OrdersComponent,\r\n    canActivate: [CanactivateService],\r\n    resolve: [OrdersService],\r\n  },\r\n  {\r\n    path: 'checkout',\r\n    loadChildren: () =>\r\n      import('./checkout/checkout.module').then((m) => m.CheckoutModule),\r\n\r\n    canActivate: [CanactivateService],\r\n  },\r\n  {\r\n    path: 'admin',\r\n    loadChildren: () =>\r\n      import('./admin/admin.module').then((m) => m.AdminModule),\r\n    canActivate: [CanactivateService],\r\n  },\r\n  { path: 'shopNow', component: ShopCakesComponent },\r\n  // { path: '**', component: PagenotfoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user: any = {};\r\n\r\n  constructor(\r\n    private ls: CommonService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private toastr: ToastrService\r\n  ) {\r\n    // check for query params\r\n    if (this.route.snapshot.queryParams.q) {\r\n      this.user.email = this.route.snapshot.queryParams.q;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  login() {\r\n    // check for empty email field\r\n    if (!this.user.email || !this.user.email.trim()) {\r\n      this.toastr.error('Email field should not be empty ', 'Error', {\r\n        timeOut: 1000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // check for empty password field\r\n    if (!this.user.password || !this.user.password.trim()) {\r\n      this.toastr.error('Password field should not be empty ', 'Error', {\r\n        timeOut: 1000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // validate Email field if not empty\r\n    if (this.ls.validateEmail(this.user.email)) {\r\n      // hit post request to login user\r\n      this.http.post(environment.apiUrl + 'login', this.user).subscribe(\r\n        (res: any) => {\r\n          // check if login is successful or not\r\n          if (res.token) {\r\n            // storing login user data to localstorage\r\n            localStorage.setItem('loginUser', JSON.stringify(res));\r\n            this.toastr.success('Login Successfully!!');\r\n            // navigate user to home page\r\n            this.router.navigate(['/']);\r\n          } else {\r\n            localStorage.removeItem('loginUser');\r\n            this.toastr.warning(res.message);\r\n          }\r\n        },\r\n        (err) => {\r\n          // display the error message\r\n          this.toastr.error(err.message);\r\n        }\r\n      );\r\n    } else { this.toastr.error('Invalid Email Id'); }\r\n  }\r\n}\r\n","<div class=\"login-section\">\r\n  <h2>Login To  Bake n’ Take</h2>\r\n  <form>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email address</label>\r\n      <input\r\n        name=\"email\"\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        id=\"email\"\r\n        [(ngModel)]=\"user.email\"\r\n        aria-describedby=\"emailHelp\"\r\n        autocomplete=\"disabled\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password</label>\r\n\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        [(ngModel)]=\"user.password\"\r\n        class=\"form-control\"\r\n        id=\"password\"\r\n      />\r\n    </div>\r\n    <div id=\"passwordHelpBlock\" class=\"form-text\">\r\n      <a routerLink=\"/forgetPassword\"> forget Password?</a>\r\n    </div>\r\n\r\n    <button type=\"submit\" (click)=\"login()\" class=\"btn btn-primary\">\r\n      Login\r\n    </button>\r\n    <div id=\"passwordHelpBlock\" class=\"form-text\">\r\n      New user? <a routerLink=\"/signup\">SignUp</a>\r\n    </div>\r\n  </form>\r\n</div>\r\n","<div class=\"card\" appCakeHighlight routerLink=\"/cake/{{ cake.cakeid }}\">\r\n  <div *ngIf=\"cake.eggless !== undefined\">\r\n    <span *ngIf=\"!cake.eggless\"><img src=\"assets/nonVeg.png\" alt=\"\" /></span>\r\n    <span *ngIf=\"cake.eggless\"><img src=\"assets/veg.png\" alt=\"\" /></span>\r\n  </div>\r\n  <img [src]=\"cake.image\" class=\"card-img-top\" alt=\"...\" />\r\n\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">{{ cake.name }}</h5>\r\n    <p class=\"card-text\">{{ cake.price | currency: \"INR\" }}</p>\r\n    <p class=\"card-text\" *ngIf=\"cake.weight\">{{ cake.weight }} Kg</p>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cakecard',\r\n  templateUrl: './cakecard.component.html',\r\n  styleUrls: ['./cakecard.component.css'],\r\n})\r\nexport class CakecardComponent implements OnInit {\r\n  //input for cake data\r\n  @Input() cake: any;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-forgetpass',\r\n  templateUrl: './forgetpass.component.html',\r\n  styleUrls: ['./forgetpass.component.css'],\r\n})\r\nexport class ForgetpassComponent implements OnInit {\r\n  // object to store the user email id\r\n  user: any = {};\r\n  constructor(\r\n    private ls: CommonService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private toastr: ToastrService\r\n  ) {\r\n    // check for the query params\r\n    if (this.route.snapshot.queryParams.q) {\r\n      this.user.email = this.route.snapshot.queryParams.q;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  // method to send password to the user\r\n  getPass() {\r\n    // check for empty email/password field\r\n    if (!this.user.email || this.user.email === ' ') {\r\n      this.toastr.warning('Email field should not be empty!!');\r\n      return;\r\n    }\r\n    // validate Email/password field if not empty\r\n    if (this.ls.validateEmail(this.user.email)) {\r\n      // hit post request to send the user password to the user email id\r\n      this.http.post(environment.apiUrl + 'recoverpassword', this.user).subscribe(\r\n        (res: any) => {\r\n          // check whether the password send successful or not\r\n          if (res.message === 'Password Sent to your email') {\r\n            this.toastr.success(res.message, '');\r\n            // redirecting user back to the login page\r\n            setTimeout(() => {\r\n              this.toastr.info('Redirecting to login page..', '', {\r\n                progressBar: true,\r\n              });\r\n              setTimeout(() => {\r\n                this.router.navigate(['/login']);\r\n              }, 2000);\r\n            }, 1000);\r\n            return;\r\n          } else {\r\n            this.toastr.warning(res.message);\r\n          } // this.ls.loginUser = res.token ? res : null;\r\n        },\r\n        (err) => {\r\n          // display the error message\r\n          console.log(err);\r\n          this.toastr.error(err.message);\r\n        }\r\n      );\r\n    } else { this.toastr.error('Invalid Email Id/Password'); }\r\n  }\r\n}\r\n","<div class=\"login-section\">\r\n    <h1>Forgot Password</h1>\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email address</label>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          id=\"email\"\r\n          [(ngModel)]=\"user.email\"\r\n          aria-describedby=\"emailHelp\"\r\n        />\r\n      </div>\r\n  \r\n      <button type=\"submit\" (click)=\"getPass()\" class=\"btn btn-primary\">\r\n        Get Password\r\n      </button>\r\n    </form>\r\n  </div>\r\n  ","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}