{"version":3,"sources":["./src/app/checkout/form/form.component.ts","./src/app/checkout/form/form.component.html","./src/app/checkout/checkout.module.ts","./src/app/checkout/ordersummary/ordersummary.component.ts","./src/app/checkout/ordersummary/ordersummary.component.html","./src/app/checkout/confirm/confirm.component.ts","./src/app/checkout/confirm/confirm.component.html","./src/app/checkout/form/deactivate.service.ts"],"names":[],"mappings":"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","file":"checkout-checkout-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.css'],\r\n})\r\nexport class FormComponent implements OnInit {\r\n  // store the user data\r\n  user: any = { price: 0 };\r\n  // store the cart items in the array\r\n  cartItems: any = [];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private cs: CommonService,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) {\r\n    // check that order details are filled or not\r\n    if (this.cs.order.name) { this.user = this.cs.order; }\r\n\r\n    // check that user clicked confirm button in order summary component or not\r\n    if (!cs.orderconfirm) {\r\n      this.router.navigate(['/checkout']);\r\n    }\r\n    // loading cart items\r\n    this.getCartItems();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // method to get cart items array\r\n  getCartItems() {\r\n    // hit post request to get the cart items\r\n    this.http.post(environment.apiUrl + 'cakecart', {}).subscribe(\r\n      (res: any) => {\r\n        if (res.data) {\r\n          // calculating the total price of the cart\r\n          this.user.price = 0;\r\n          this.user.price += res.data.reduce(\r\n            (acc: any, item: any) => item.price * item.quantity + acc,\r\n            0\r\n          );\r\n          // check  if the total price is equal to zero\r\n          if (this.user.price <= 0) { this.router.navigate(['/']); }\r\n          // add delivery charges if total price is less then minimum cart value\r\n          if (this.user.price < this.cs.mincartvalue) {\r\n            this.user.price += this.cs.deliveryCharge;\r\n          }\r\n\r\n          return (this.cartItems = res.data);\r\n        }\r\n\r\n        this.toastr.warning(res.message);\r\n      },\r\n      (err: any) => {\r\n        // display the error\r\n        console.log(err);\r\n        this.toastr.error(err.message);\r\n      }\r\n    );\r\n  }\r\n  // method to validate form details\r\n  placeOrder() {\r\n    // check if any field is empty\r\n    if (\r\n      !this.user.name ||\r\n      !this.user.name.trim() ||\r\n      !this.user.address ||\r\n      !this.user.address.trim() ||\r\n      !this.user.city ||\r\n      !this.user.city.trim() ||\r\n      !this.user.pincode ||\r\n      !this.user.pincode.trim() ||\r\n      !this.user.phone ||\r\n      !this.user.phone.trim()\r\n    ) {\r\n      this.toastr.warning('Input Fields should not be empty');\r\n      return;\r\n    }\r\n\r\n    // validate phone number\r\n    if (!this.cs.validatephonenumber(this.user.phone)) {\r\n      this.toastr.warning('Please Enter the vaild phone number');\r\n      return;\r\n    }\r\n    // validate pincode\r\n    if (!this.cs.validatepincode(this.user.pincode)) {\r\n      this.toastr.warning('Please Enter the vaild Pincode');\r\n      return;\r\n    }\r\n\r\n    // store the user details\r\n    this.cs.order = { ...this.user, cakes: this.cartItems };\r\n\r\n    // navigate to confirmation page\r\n    this.router.navigate(['/checkout/confirm']);\r\n  }\r\n\r\n  // candeactivate confirm method\r\n  confirm(next: any) {\r\n    // check the next route is payment or not\r\n    if (next.url === '/checkout/confirm' && !this.cs.payment) {\r\n      // confirmation from user that he/she enter filled the fields corrctly\r\n      if (\r\n        confirm('Please check your details. If You Already checked Click Ok.')\r\n      ) {\r\n        this.cs.payment = true;\r\n        const index = this.cs.ullist.findIndex((e: any) =>\r\n          e.className.includes('active')\r\n        );\r\n        console.log(this.cs.ullist);\r\n        this.cs.ullist[index].classList.remove('active');\r\n        this.cs.ullist[index + 1].classList.add('active');\r\n        return true;\r\n      } else { return false; }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"login-section\">\r\n  <h1>Fill Delivery Details</h1>\r\n  <form>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Name</label>\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        [(ngModel)]=\"user.name\"\r\n        placeholder=\"Enter your full name\"\r\n        autocomplete=\"disabled\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"address\">Address</label>\r\n      <input\r\n        name=\"address\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"address\"\r\n        [(ngModel)]=\"user.address\"\r\n        placeholder=\"Enter your address\"\r\n        autocomplete=\"disabled\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"phone\">Phone No.</label>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"phone\"\r\n        [(ngModel)]=\"user.phone\"\r\n        placeholder=\"Enter a 10-digit vaild phone number\"\r\n        class=\"form-control\"\r\n        id=\"phone\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"city\">City</label>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"city\"\r\n        [(ngModel)]=\"user.city\"\r\n        class=\"form-control\"\r\n        placeholder=\"Enter your city name\"\r\n        id=\"city\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"pincode\">Pincode</label>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"pincode\"\r\n        [(ngModel)]=\"user.pincode\"\r\n        class=\"form-control\"\r\n        placeholder=\"Enter your area pincode\"\r\n        id=\"pincode\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"totalPrice\">Total Price</label>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"totalPrice\"\r\n        [(ngModel)]=\"user.price\"\r\n        class=\"form-control\"\r\n        id=\"totalPrice\"\r\n        disabled\r\n      />\r\n    </div>\r\n\r\n    <button type=\"submit\" (click)=\"placeOrder()\" class=\"btn btn-primary\">\r\n      PlaceOrder\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CheckoutComponent } from './checkout.component';\r\nimport { OrdersummaryComponent } from './ordersummary/ordersummary.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FormComponent } from './form/form.component';\r\nimport { ConfirmComponent } from './confirm/confirm.component';\r\nimport { DeactivateService } from './form/deactivate.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n\r\n    children: [\r\n      { path: '', component: OrdersummaryComponent },\r\n      {\r\n        path: 'details',\r\n        component: FormComponent,\r\n        canDeactivate: [DeactivateService],\r\n      },\r\n      {\r\n        path: 'confirm',\r\n        component: ConfirmComponent,\r\n      },\r\n    ],\r\n    component: CheckoutComponent,\r\n  },\r\n];\r\n@NgModule({\r\n  declarations: [OrdersummaryComponent, FormComponent, ConfirmComponent],\r\n  imports: [CommonModule, RouterModule.forChild(routes), FormsModule],\r\n  exports: [RouterModule],\r\n})\r\nexport class CheckoutModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-ordersummary',\r\n  templateUrl: './ordersummary.component.html',\r\n  styleUrls: ['./ordersummary.component.css'],\r\n})\r\nexport class OrdersummaryComponent implements OnInit {\r\n  // store the delivery charges\r\n  deliveryCharge: any = 0;\r\n  // store the user cart items\r\n  cartItems: any = [];\r\n  // store the status of the item loaded or not\r\n  loading: any = true;\r\n  // store the value of the cart items\r\n  totalPrice: any = 0;\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private cs: CommonService,\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) {\r\n    // get the cart items\r\n    this.getCartItems();\r\n  }\r\n\r\n  // method to load the cart items\r\n  getCartItems() {\r\n    // hit post request to fetch the cart items\r\n    this.http.post(environment.apiUrl + 'cakecart', {}).subscribe(\r\n      (res: any) => {\r\n        // check if the data is loaded or not\r\n        if (res.data) {\r\n          // change the loading states to false after data get loaded\r\n          this.loading = false;\r\n\r\n          return (this.cartItems = res.data);\r\n        }\r\n\r\n        this.toastr.warning(res.message);\r\n      },\r\n      (err: any) => {\r\n        // display error message\r\n        console.log(err);\r\n        this.toastr.error(err.message);\r\n      }\r\n    );\r\n  }\r\n  ngDoCheck() {\r\n    // calculate the totalprice of the cart items\r\n    this.totalPrice = this.cartItems.reduce(\r\n      (acc: any, item: any) => item.price * item.quantity + acc,\r\n      0\r\n    );\r\n\r\n    // check to change the delivery charge\r\n    if (this.totalPrice > this.cs.mincartvalue) { this.deliveryCharge = 0; }\r\n    else { this.deliveryCharge = this.cs.deliveryCharge; }\r\n\r\n    // check for empty cart\r\n    if (!this.loading && !this.totalPrice) {\r\n      this.toastr.info('Your Cart is empty.');\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // method to redirect user to the next route\r\n  next() {\r\n    // enable the place order component\r\n    this.cs.orderconfirm = true;\r\n\r\n    // find the index of current activated li tag\r\n    const index = this.cs.ullist.findIndex((e: any) =>\r\n      e.className.includes('active')\r\n    );\r\n\r\n    // remove the active class from the current activated li tag\r\n    this.cs.ullist[index].classList.remove('active');\r\n\r\n    // add active class to the next li tag\r\n    this.cs.ullist[index + 1].classList.add('active');\r\n\r\n    this.router.navigate(['/checkout/details']);\r\n  }\r\n}\r\n","<div class=\"cart flex\">\r\n  <main class=\"cart-main flex\">\r\n    <div class=\"cart-products flex\">\r\n      <ul class=\"cart-products-list flex\" *ngIf=\"loading\">\r\n        <!-- Show the loading message -->\r\n        <p *ngIf=\"loading !== 'upldating'\">\r\n          <img\r\n            class=\"loading\"\r\n            src=\"https://i.stack.imgur.com/hzk6C.gif\"\r\n            alt=\"\"\r\n          />\r\n          Your Order Summary\r\n        </p>\r\n      </ul>\r\n      <!-- show the order summary -->\r\n      <ul class=\"cart-products-list flex\" *ngIf=\"!loading && totalPrice\">\r\n        <li class=\"products-header\">\r\n          <p>Products</p>\r\n          <p>Price</p>\r\n          <p>Qty</p>\r\n          <p>Subtotal</p>\r\n        </li>\r\n        <li class=\"order-products\" *ngFor=\"let item of cartItems\">\r\n          <p class=\"item-title\">\r\n            <img\r\n              [src]=\"item.image\"\r\n              class=\"item-img click-effect\"\r\n              alt=\"\"\r\n              routerLink=\"/cakes/{{ item.cakeid }}\"\r\n            />\r\n            <span\r\n              ><p class=\"click-effect\" routerLink=\"/cakes/{{ item.cakeid }}\">\r\n                {{ item.name }}\r\n              </p>\r\n              <p class=\"small-text\">Weight: {{ item.weight }} kg</p>\r\n            </span>\r\n          </p>\r\n          <p>{{ item.price | currency: \"INR\" }}</p>\r\n          <p>\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              [(ngModel)]=\"item.quantity\"\r\n              disabled\r\n            />\r\n          </p>\r\n          <p>{{ item.quantity * item.price | currency: \"INR\" }}</p>\r\n        </li>\r\n        <li class=\"products-header\"></li>\r\n        <li class=\"products-header total\">\r\n          <p>\r\n            <i class=\"fas fa-truck\"></i>\r\n            {{\r\n              deliveryCharge\r\n                ? \" Delivery Charge: ₹\" + deliveryCharge\r\n                : \"Free Delivery\"\r\n            }}\r\n          </p>\r\n          <p></p>\r\n          <p>Total :</p>\r\n          <p class=\"total\">\r\n            <span class=\"delivery-charge\">\r\n              {{ totalPrice | currency: \"INR\" }}</span\r\n            >\r\n            <span class=\"delivery-charge\">\r\n              + {{ deliveryCharge | currency: \"INR\" }}</span\r\n            >\r\n\r\n            <span class=\"total-price\">\r\n              {{\r\n                totalPrice\r\n                  ? totalPrice + deliveryCharge\r\n                  : (totalPrice | currency: \"INR\")\r\n              }}\r\n            </span>\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </main>\r\n\r\n  <button\r\n    class=\"btn btn-primary\"\r\n    *ngIf=\"!loading && totalPrice\"\r\n    (click)=\"next()\"\r\n  >\r\n    Confirm\r\n  </button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  templateUrl: './confirm.component.html',\r\n  styleUrls: ['./confirm.component.css'],\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n  constructor(\r\n    public cs: CommonService,\r\n    private http: HttpClient,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) {\r\n    // check if the order object exists or not\r\n    if (!cs.order.name) {\r\n      this.router.navigate(['/checkout']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // method to place order\r\n  payment() {\r\n    // hit post request to place order\r\n    this.http.post(environment.apiUrl + 'addcakeorder', this.cs.order).subscribe(\r\n      (res: any) => {\r\n        // check if order placed successful\r\n        if (res.messageg === 'order placed') {\r\n          this.toastr.success('Your Order Placed!!');\r\n          this.router.navigate(['/myorders']);\r\n          return;\r\n        }\r\n        this.toastr.warning(res.messageg);\r\n      },\r\n      (err) => {\r\n        // display error message\r\n        console.log(err);\r\n        this.toastr.error(err.message);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"payment\">\r\n  <div>\r\n    <h1>Confirm Details</h1>\r\n    <div>\r\n      <p>Name :{{ cs.order.name }}</p>\r\n      <p>Phone No. :{{ cs.order.phone }}</p>\r\n      <p>\r\n        Delivery Address :{{ cs.order.address }},{{ cs.order.city }}-{{\r\n          cs.order.pincode\r\n        }}\r\n      </p>\r\n\r\n      <p>Total Amount To Pay:{{ cs.order.price }}</p>\r\n      <p>Payment Mode : Cash</p>\r\n    </div>\r\n  </div>\r\n  <button class=\"btn btn-primary\" (click)=\"payment()\">Place Order</button>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanDeactivate,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\n\r\nexport interface T {\r\n  confirm(nextState: any): boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeactivateService implements CanDeactivate<T> {\r\n  constructor() {}\r\n  canDeactivate(\r\n    component: T,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot\r\n  ): boolean {\r\n    if (nextState?.url.includes('/checkout')) {\r\n      return component.confirm(nextState);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}